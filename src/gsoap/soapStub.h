/* soapStub.h
   Generated by gSOAP 2.8.28 from baseService.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_ns2	"http://exception.blueant.axis.proventis.net/"
#define SOAP_NAMESPACE_OF_ns3	"http://base.blueant.axis.proventis.net/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20828
# error "GSOAP VERSION 20828 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/* baseService.h:142 */
#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
/* xsd:boolean */
enum xsd__boolean
{
	xsd__boolean__false_ = 0,
	xsd__boolean__true_ = 1
};
#endif

/* baseService.h:215 */
#ifndef SOAP_TYPE_ns3__T_USCORELicenseType
#define SOAP_TYPE_ns3__T_USCORELicenseType (16)
/* ns3:T_LicenseType */
enum ns3__T_USCORELicenseType
{
	ns3__T_USCORELicenseType__named = 0,
	ns3__T_USCORELicenseType__concurrent = 1
};
#endif

/* baseService.h:233 */
#ifndef SOAP_TYPE_ns3__T_USCOREUserState
#define SOAP_TYPE_ns3__T_USCOREUserState (17)
/* ns3:T_UserState */
enum ns3__T_USCOREUserState
{
	ns3__T_USCOREUserState__active = 0,
	ns3__T_USCOREUserState__locked = 1
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs, and Unions                                               *
 *                                                                            *
\******************************************************************************/

struct ns2__GeneralWebserviceException;	/* baseService.h:293 */
struct ns3__T_USCOREForeignKey;	/* baseService.h:320 */
struct ns3__T_USCOREForeignKeyList;	/* baseService.h:342 */
union _ns3__union_UserIDInfo;	/* baseService.h:376 */
struct ns3__UserIDInfo;	/* baseService.h:358 */
struct ns3__T_USCOREUser;	/* baseService.h:389 */
struct ns3__T_USCOREIdList;	/* baseService.h:409 */
struct _ns3__session;	/* baseService.h:473 */
struct _ns3__LoginRequestParameter;	/* baseService.h:490 */
struct _ns3__LoginNoAuthRequestParameter;	/* baseService.h:507 */
struct _ns3__LoginSAMLRequestParameter;	/* baseService.h:522 */
union _ns3__union_LoginImpersonateRequestParameter;	/* baseService.h:564 */
struct _ns3__LoginImpersonateRequestParameter;	/* baseService.h:537 */
struct _ns3__LogoutRequestParameter;	/* baseService.h:578 */
struct _ns3__createUserRequestParameter;	/* baseService.h:593 */
struct _ns3__searchUserRequestParameter;	/* baseService.h:650 */
struct _ns3__deleteUserRequestParameter;	/* baseService.h:715 */
struct _ns3__UserList;	/* baseService.h:732 */
struct ns2__UserManagementException;	/* baseService.h:748 */
struct _ns2__WeekFinishedException;	/* baseService.h:767 */
struct _ns2__InvalidParameterException;	/* baseService.h:786 */
struct _ns2__AssertionException;	/* baseService.h:805 */
struct _ns2__GeneralWebserviceException;	/* baseService.h:824 */
struct ns2__InvalidLicenseException;	/* baseService.h:842 */
struct _ns2__InvalidSessionException;	/* baseService.h:863 */
struct _ns2__InvalidClientException;	/* baseService.h:884 */
struct _ns2__PermissionDeniedException;	/* baseService.h:905 */
struct _ns2__InvalidUsernamePasswordCombinationException;	/* baseService.h:926 */
struct _ns2__InvalidUsernameException;	/* baseService.h:947 */
struct _ns2__InvalidDatesException;	/* baseService.h:968 */
struct _ns2__ServerMaintenanceException;	/* baseService.h:989 */
struct _ns2__ImpersonatedUserNotFoundException;	/* baseService.h:1010 */
struct _ns2__InvalidNrOfImpersonationsException;	/* baseService.h:1031 */
struct _ns2__InvalidNamedLicenseException;	/* baseService.h:1052 */
struct _ns2__InvalidConcurrentLicenseException;	/* baseService.h:1075 */
struct __ns1__Login;	/* baseService.h:1384 */
struct __ns1__LoginNoAuth;	/* baseService.h:1457 */
struct __ns1__LoginSAML;	/* baseService.h:1530 */
struct __ns1__LoginImpersonate;	/* baseService.h:1609 */
struct __ns1__LogoutResponse;	/* baseService.h:1620 */
struct __ns1__Logout;	/* baseService.h:1680 */
struct __ns1__createUser;	/* baseService.h:1754 */
struct __ns1__deleteUserResponse;	/* baseService.h:1765 */
struct __ns1__deleteUser;	/* baseService.h:1831 */
struct __ns1__searchUser;	/* baseService.h:1905 */

/* baseService.h:293 */
#ifndef SOAP_TYPE_ns2__GeneralWebserviceException
#define SOAP_TYPE_ns2__GeneralWebserviceException (18)
/* ns2:GeneralWebserviceException complex type: */
struct ns2__GeneralWebserviceException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:320 */
#ifndef SOAP_TYPE_ns3__T_USCOREForeignKey
#define SOAP_TYPE_ns3__T_USCOREForeignKey (19)
/* ns3:T_ForeignKey complex type: */
struct ns3__T_USCOREForeignKey
{
	char *foreignID;	/* required element of XSD type xsd:string */
	char *foreignSystem;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:342 */
#ifndef SOAP_TYPE_ns3__T_USCOREForeignKeyList
#define SOAP_TYPE_ns3__T_USCOREForeignKeyList (20)
/* ns3:T_ForeignKeyList complex type: */
struct ns3__T_USCOREForeignKeyList
{
	int __sizeForeignKey;	/* sequence of elements <ForeignKey> of XSD type ns3:T_ForeignKey */
	struct ns3__T_USCOREForeignKey *ForeignKey;
};
#endif

/* baseService.h:376 */
#ifndef SOAP_TYPE__ns3__union_UserIDInfo
#define SOAP_TYPE__ns3__union_UserIDInfo (23)
/* xsd:choice complex type: */
union _ns3__union_UserIDInfo
{
#define SOAP_UNION__ns3__union_UserIDInfo_userID	(1)
	LONG64 userID;
#define SOAP_UNION__ns3__union_UserIDInfo_userName	(2)
	char *userName;
};
#endif

/* baseService.h:358 */
#ifndef SOAP_TYPE_ns3__UserIDInfo
#define SOAP_TYPE_ns3__UserIDInfo (22)
/* Choice: */
struct ns3__UserIDInfo
{
	int __union_UserIDInfo;	/* union discriminant (of union defined below) */
	union _ns3__union_UserIDInfo union_UserIDInfo;
};
#endif

/* baseService.h:389 */
#ifndef SOAP_TYPE_ns3__T_USCOREUser
#define SOAP_TYPE_ns3__T_USCOREUser (24)
/* ns3:T_User complex type: */
struct ns3__T_USCOREUser
{
	LONG64 userID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of XSD type ns3:id */
	LONG64 personID;	/* required element of XSD type ns3:id */
	char *username;	/* required element of XSD type xsd:string */
	struct ns3__T_USCOREIdList *permissionGroups;	/* required element of XSD type ns3:T_IdList */
	char *lastname;	/* required element of XSD type xsd:string */
	char *firstname;	/* required element of XSD type xsd:string */
	char *personalNumber;	/* required element of XSD type xsd:string */
	char *email;	/* required element of XSD type xsd:string */
	enum ns3__T_USCORELicenseType licenseType;	/* required element of XSD type ns3:T_LicenseType */
	enum ns3__T_USCOREUserState userState;	/* required element of XSD type ns3:T_UserState */
	struct ns3__T_USCOREForeignKeyList *foreignKeyList;	/* required element of XSD type ns3:T_ForeignKeyList */
};
#endif

/* baseService.h:409 */
#ifndef SOAP_TYPE_ns3__T_USCOREIdList
#define SOAP_TYPE_ns3__T_USCOREIdList (25)
/* ns3:T_IdList complex type: */
struct ns3__T_USCOREIdList
{
	int __sizeID;	/* sequence of elements <ID> of XSD type ns3:id */
	LONG64 *ID;
};
#endif

/* baseService.h:473 */
#ifndef SOAP_TYPE__ns3__session
#define SOAP_TYPE__ns3__session (29)
/* ns3:session complex type: */
struct _ns3__session
{
	char *sessionID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of XSD type xsd:string */
	LONG64 personID;	/* required element of XSD type xsd:long */
};
#endif

/* baseService.h:490 */
#ifndef SOAP_TYPE__ns3__LoginRequestParameter
#define SOAP_TYPE__ns3__LoginRequestParameter (30)
/* ns3:LoginRequestParameter complex type: */
struct _ns3__LoginRequestParameter
{
	char *username;	/* required element of XSD type xsd:string */
	char *password;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:507 */
#ifndef SOAP_TYPE__ns3__LoginNoAuthRequestParameter
#define SOAP_TYPE__ns3__LoginNoAuthRequestParameter (31)
/* ns3:LoginNoAuthRequestParameter complex type: */
struct _ns3__LoginNoAuthRequestParameter
{
	char *username;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:522 */
#ifndef SOAP_TYPE__ns3__LoginSAMLRequestParameter
#define SOAP_TYPE__ns3__LoginSAMLRequestParameter (32)
/* ns3:LoginSAMLRequestParameter complex type: */
struct _ns3__LoginSAMLRequestParameter
{
	char *SAMLartifact;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:564 */
#ifndef SOAP_TYPE__ns3__union_LoginImpersonateRequestParameter
#define SOAP_TYPE__ns3__union_LoginImpersonateRequestParameter (34)
/* xsd:choice complex type: */
union _ns3__union_LoginImpersonateRequestParameter
{
#define SOAP_UNION__ns3__union_LoginImpersonateRequestParameter_ImpersonateUsername	(1)
	char *ImpersonateUsername;
#define SOAP_UNION__ns3__union_LoginImpersonateRequestParameter_ImpersonateUserID	(2)
	LONG64 *ImpersonateUserID;
#define SOAP_UNION__ns3__union_LoginImpersonateRequestParameter_ImpersonateForeignKey	(3)
	struct ns3__T_USCOREForeignKey *ImpersonateForeignKey;
};
#endif

/* baseService.h:537 */
#ifndef SOAP_TYPE__ns3__LoginImpersonateRequestParameter
#define SOAP_TYPE__ns3__LoginImpersonateRequestParameter (33)
/* ns3:LoginImpersonateRequestParameter complex type: */
struct _ns3__LoginImpersonateRequestParameter
{
	char *username;	/* required element of XSD type xsd:string */
	char *password;	/* required element of XSD type xsd:string */
	int __union_LoginImpersonateRequestParameter;	/* union discriminant (of union defined below) */
	union _ns3__union_LoginImpersonateRequestParameter union_LoginImpersonateRequestParameter;
};
#endif

/* baseService.h:578 */
#ifndef SOAP_TYPE__ns3__LogoutRequestParameter
#define SOAP_TYPE__ns3__LogoutRequestParameter (35)
/* ns3:LogoutRequestParameter complex type: */
struct _ns3__LogoutRequestParameter
{
	char *sessionID;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:593 */
#ifndef SOAP_TYPE__ns3__createUserRequestParameter
#define SOAP_TYPE__ns3__createUserRequestParameter (36)
/* ns3:createUserRequestParameter complex type: */
struct _ns3__createUserRequestParameter
{
	char *sessionID;	/* required element of XSD type xsd:string */
	LONG64 personID;	/* required element of XSD type ns3:id */
	char *username;	/* required element of XSD type xsd:string */
	char *passwort;	/* required element of XSD type xsd:string */
	struct ns3__T_USCOREIdList *permissionGroups;	/* required element of XSD type ns3:T_IdList */
	char *accessFrom;	/* required element of XSD type xsd:date */
	char *accessTo;	/* required element of XSD type xsd:date */
	enum ns3__T_USCORELicenseType *licenseType;	/* required element of XSD type ns3:T_LicenseType */
	struct ns3__T_USCOREForeignKeyList *foreignKeyList;	/* required element of XSD type ns3:T_ForeignKeyList */
};
#endif

/* baseService.h:650 */
#ifndef SOAP_TYPE__ns3__searchUserRequestParameter
#define SOAP_TYPE__ns3__searchUserRequestParameter (38)
/* ns3:searchUserRequestParameter complex type: */
struct _ns3__searchUserRequestParameter
{
	char *sessionID;	/* required element of XSD type xsd:string */
	char *username;	/* required element of XSD type xsd:string */
	char *email;	/* required element of XSD type xsd:string */
	LONG64 *personID;	/* required element of XSD type ns3:id */
	LONG64 *permissionGroupID;	/* required element of XSD type ns3:id */
	char *firstname;	/* required element of XSD type xsd:string */
	char *lastname;	/* required element of XSD type xsd:string */
	char *personalNumber;	/* required element of XSD type xsd:string */
	enum ns3__T_USCORELicenseType *licenseType;	/* required element of XSD type ns3:T_LicenseType */
	enum ns3__T_USCOREUserState *userState;	/* required element of XSD type ns3:T_UserState */
	struct ns3__T_USCOREForeignKey *foreignKey;	/* required element of XSD type ns3:T_ForeignKey */
};
#endif

/* baseService.h:715 */
#ifndef SOAP_TYPE__ns3__deleteUserRequestParameter
#define SOAP_TYPE__ns3__deleteUserRequestParameter (40)
/* ns3:deleteUserRequestParameter complex type: */
struct _ns3__deleteUserRequestParameter
{
	char *sessionID;	/* required element of XSD type xsd:string */
	struct ns3__UserIDInfo *user;	/* required element of XSD type ns3:UserIDInfo */
};
#endif

/* baseService.h:732 */
#ifndef SOAP_TYPE__ns3__UserList
#define SOAP_TYPE__ns3__UserList (42)
/* ns3:UserList complex type: */
struct _ns3__UserList
{
	int __sizeUser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <User> of XSD type ns3:T_User */
	struct ns3__T_USCOREUser *User;
};
#endif

/* baseService.h:748 */
#ifndef SOAP_TYPE_ns2__UserManagementException
#define SOAP_TYPE_ns2__UserManagementException (44)
/* ns2:UserManagementException complex type: */
struct ns2__UserManagementException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:767 */
#ifndef SOAP_TYPE__ns2__WeekFinishedException
#define SOAP_TYPE__ns2__WeekFinishedException (45)
/* ns2:WeekFinishedException complex type: */
struct _ns2__WeekFinishedException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:786 */
#ifndef SOAP_TYPE__ns2__InvalidParameterException
#define SOAP_TYPE__ns2__InvalidParameterException (46)
/* ns2:InvalidParameterException complex type: */
struct _ns2__InvalidParameterException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:805 */
#ifndef SOAP_TYPE__ns2__AssertionException
#define SOAP_TYPE__ns2__AssertionException (47)
/* ns2:AssertionException complex type: */
struct _ns2__AssertionException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:824 */
#ifndef SOAP_TYPE__ns2__GeneralWebserviceException
#define SOAP_TYPE__ns2__GeneralWebserviceException (48)
/* ns2:GeneralWebserviceException complex type: */
struct _ns2__GeneralWebserviceException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:842 */
#ifndef SOAP_TYPE_ns2__InvalidLicenseException
#define SOAP_TYPE_ns2__InvalidLicenseException (49)
/* ns2:InvalidLicenseException complex type: */
struct ns2__InvalidLicenseException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:863 */
#ifndef SOAP_TYPE__ns2__InvalidSessionException
#define SOAP_TYPE__ns2__InvalidSessionException (50)
/* ns2:InvalidSessionException complex type: */
struct _ns2__InvalidSessionException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:884 */
#ifndef SOAP_TYPE__ns2__InvalidClientException
#define SOAP_TYPE__ns2__InvalidClientException (51)
/* ns2:InvalidClientException complex type: */
struct _ns2__InvalidClientException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:905 */
#ifndef SOAP_TYPE__ns2__PermissionDeniedException
#define SOAP_TYPE__ns2__PermissionDeniedException (52)
/* ns2:PermissionDeniedException complex type: */
struct _ns2__PermissionDeniedException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:926 */
#ifndef SOAP_TYPE__ns2__InvalidUsernamePasswordCombinationException
#define SOAP_TYPE__ns2__InvalidUsernamePasswordCombinationException (53)
/* ns2:InvalidUsernamePasswordCombinationException complex type: */
struct _ns2__InvalidUsernamePasswordCombinationException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:947 */
#ifndef SOAP_TYPE__ns2__InvalidUsernameException
#define SOAP_TYPE__ns2__InvalidUsernameException (54)
/* ns2:InvalidUsernameException complex type: */
struct _ns2__InvalidUsernameException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:968 */
#ifndef SOAP_TYPE__ns2__InvalidDatesException
#define SOAP_TYPE__ns2__InvalidDatesException (55)
/* ns2:InvalidDatesException complex type: */
struct _ns2__InvalidDatesException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:989 */
#ifndef SOAP_TYPE__ns2__ServerMaintenanceException
#define SOAP_TYPE__ns2__ServerMaintenanceException (56)
/* ns2:ServerMaintenanceException complex type: */
struct _ns2__ServerMaintenanceException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:1010 */
#ifndef SOAP_TYPE__ns2__ImpersonatedUserNotFoundException
#define SOAP_TYPE__ns2__ImpersonatedUserNotFoundException (57)
/* ns2:ImpersonatedUserNotFoundException complex type: */
struct _ns2__ImpersonatedUserNotFoundException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:1031 */
#ifndef SOAP_TYPE__ns2__InvalidNrOfImpersonationsException
#define SOAP_TYPE__ns2__InvalidNrOfImpersonationsException (58)
/* ns2:InvalidNrOfImpersonationsException complex type: */
struct _ns2__InvalidNrOfImpersonationsException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:1052 */
#ifndef SOAP_TYPE__ns2__InvalidNamedLicenseException
#define SOAP_TYPE__ns2__InvalidNamedLicenseException (59)
/* ns2:InvalidNamedLicenseException complex type: */
struct _ns2__InvalidNamedLicenseException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:1075 */
#ifndef SOAP_TYPE__ns2__InvalidConcurrentLicenseException
#define SOAP_TYPE__ns2__InvalidConcurrentLicenseException (60)
/* ns2:InvalidConcurrentLicenseException complex type: */
struct _ns2__InvalidConcurrentLicenseException
{
	char *cause;	/* required element of XSD type xsd:anyType */
	char *message;	/* required element of XSD type xsd:string */
};
#endif

/* baseService.h:1269 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (61)
/* SOAP-ENV:Detail complex type: */
struct SOAP_ENV__Detail
{
	struct _ns2__AssertionException *ns2__AssertionException;	/* optional element of XSD type ns2:AssertionException */
	struct _ns2__GeneralWebserviceException *ns2__GeneralWebserviceException;	/* optional element of XSD type ns2:GeneralWebserviceException */
	struct _ns2__ImpersonatedUserNotFoundException *ns2__ImpersonatedUserNotFoundException;	/* optional element of XSD type ns2:ImpersonatedUserNotFoundException */
	struct _ns2__InvalidClientException *ns2__InvalidClientException;	/* optional element of XSD type ns2:InvalidClientException */
	struct _ns2__InvalidConcurrentLicenseException *ns2__InvalidConcurrentLicenseException;	/* optional element of XSD type ns2:InvalidConcurrentLicenseException */
	struct _ns2__InvalidDatesException *ns2__InvalidDatesException;	/* optional element of XSD type ns2:InvalidDatesException */
	struct _ns2__InvalidNamedLicenseException *ns2__InvalidNamedLicenseException;	/* optional element of XSD type ns2:InvalidNamedLicenseException */
	struct _ns2__InvalidNrOfImpersonationsException *ns2__InvalidNrOfImpersonationsException;	/* optional element of XSD type ns2:InvalidNrOfImpersonationsException */
	struct _ns2__InvalidParameterException *ns2__InvalidParameterException;	/* optional element of XSD type ns2:InvalidParameterException */
	struct _ns2__InvalidSessionException *ns2__InvalidSessionException;	/* optional element of XSD type ns2:InvalidSessionException */
	struct _ns2__InvalidUsernameException *ns2__InvalidUsernameException;	/* optional element of XSD type ns2:InvalidUsernameException */
	struct _ns2__InvalidUsernamePasswordCombinationException *ns2__InvalidUsernamePasswordCombinationException;	/* optional element of XSD type ns2:InvalidUsernamePasswordCombinationException */
	struct _ns2__PermissionDeniedException *ns2__PermissionDeniedException;	/* optional element of XSD type ns2:PermissionDeniedException */
	struct _ns2__ServerMaintenanceException *ns2__ServerMaintenanceException;	/* optional element of XSD type ns2:ServerMaintenanceException */
	int __type;	/* any type of element <fault> (defined below)
	   WARNING: do not create a cyclic data structure graph throught this element unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
	void *fault;	/* transient (not serialized) */
	char *__any;
};
#endif
#endif

/* baseService.h:1384 */
#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (81)
/* Operation wrapper: */
struct __ns1__Login
{
	struct _ns3__LoginRequestParameter *ns3__LoginRequestParameter;	/* optional element of XSD type ns3:LoginRequestParameter */
};
#endif

/* baseService.h:1457 */
#ifndef SOAP_TYPE___ns1__LoginNoAuth
#define SOAP_TYPE___ns1__LoginNoAuth (84)
/* Operation wrapper: */
struct __ns1__LoginNoAuth
{
	struct _ns3__LoginNoAuthRequestParameter *ns3__LoginNoAuthRequestParameter;	/* optional element of XSD type ns3:LoginNoAuthRequestParameter */
};
#endif

/* baseService.h:1530 */
#ifndef SOAP_TYPE___ns1__LoginSAML
#define SOAP_TYPE___ns1__LoginSAML (87)
/* Operation wrapper: */
struct __ns1__LoginSAML
{
	struct _ns3__LoginSAMLRequestParameter *ns3__LoginSAMLRequestParameter;	/* optional element of XSD type ns3:LoginSAMLRequestParameter */
};
#endif

/* baseService.h:1609 */
#ifndef SOAP_TYPE___ns1__LoginImpersonate
#define SOAP_TYPE___ns1__LoginImpersonate (90)
/* Operation wrapper: */
struct __ns1__LoginImpersonate
{
	struct _ns3__LoginImpersonateRequestParameter *ns3__LoginImpersonateRequestParameter;	/* optional element of XSD type ns3:LoginImpersonateRequestParameter */
};
#endif

/* baseService.h:1620 */
#ifndef SOAP_TYPE___ns1__LogoutResponse
#define SOAP_TYPE___ns1__LogoutResponse (91)
/* Operation wrapper: */
struct __ns1__LogoutResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* baseService.h:1680 */
#ifndef SOAP_TYPE___ns1__Logout
#define SOAP_TYPE___ns1__Logout (95)
/* Operation wrapper: */
struct __ns1__Logout
{
	struct _ns3__LogoutRequestParameter *ns3__LogoutRequestParameter;	/* optional element of XSD type ns3:LogoutRequestParameter */
};
#endif

/* baseService.h:1754 */
#ifndef SOAP_TYPE___ns1__createUser
#define SOAP_TYPE___ns1__createUser (98)
/* Operation wrapper: */
struct __ns1__createUser
{
	struct _ns3__createUserRequestParameter *ns3__createUserRequestParameter;	/* optional element of XSD type ns3:createUserRequestParameter */
};
#endif

/* baseService.h:1765 */
#ifndef SOAP_TYPE___ns1__deleteUserResponse
#define SOAP_TYPE___ns1__deleteUserResponse (99)
/* Operation wrapper: */
struct __ns1__deleteUserResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* baseService.h:1831 */
#ifndef SOAP_TYPE___ns1__deleteUser
#define SOAP_TYPE___ns1__deleteUser (103)
/* Operation wrapper: */
struct __ns1__deleteUser
{
	struct _ns3__deleteUserRequestParameter *ns3__deleteUserRequestParameter;	/* optional element of XSD type ns3:deleteUserRequestParameter */
};
#endif

/* baseService.h:1905 */
#ifndef SOAP_TYPE___ns1__searchUser
#define SOAP_TYPE___ns1__searchUser (107)
/* Operation wrapper: */
struct __ns1__searchUser
{
	struct _ns3__searchUserRequestParameter *ns3__searchUserRequestParameter;	/* optional element of XSD type ns3:searchUserRequestParameter */
};
#endif

/* baseService.h:2192 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (108)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* baseService.h:2192 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (109)
/* Type SOAP_ENV__Code is a recursive data type (in)directly referencing itself through its (base) class members */
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of XSD type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of XSD type SOAP-ENV:Code */
};
#endif
#endif

/* baseService.h:2192 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (111)
/* SOAP-ENV:Reason complex type: */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of XSD type xsd:string */
};
#endif
#endif

/* baseService.h:2192 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (112)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of XSD type xsd:QName */
	char *faultstring;	/* optional element of XSD type xsd:string */
	char *faultactor;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of XSD type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of XSD type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of XSD type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of XSD type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of XSD type SOAP-ENV:Detail */
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* baseService.h:126 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* baseService.h:126 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* baseService.h:145 */
#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (8)
typedef char *xsd__date;
#endif

/* baseService.h:190 */
#ifndef SOAP_TYPE_ns3__id
#define SOAP_TYPE_ns3__id (10)
typedef LONG64 ns3__id;
#endif

/* baseService.h:194 */
#ifndef SOAP_TYPE_ns3__optionalInt
#define SOAP_TYPE_ns3__optionalInt (11)
typedef int ns3__optionalInt;
#endif

/* baseService.h:198 */
#ifndef SOAP_TYPE_ns3__optionalBoolean
#define SOAP_TYPE_ns3__optionalBoolean (12)
typedef enum xsd__boolean ns3__optionalBoolean;
#endif

/* baseService.h:202 */
#ifndef SOAP_TYPE_ns3__optionalDouble
#define SOAP_TYPE_ns3__optionalDouble (14)
typedef double ns3__optionalDouble;
#endif

/* baseService.h:206 */
#ifndef SOAP_TYPE_ns3__optionalLong
#define SOAP_TYPE_ns3__optionalLong (15)
typedef LONG64 ns3__optionalLong;
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__LoginRequestParameter *ns3__LoginRequestParameter, struct _ns3__session *ns3__session);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginNoAuth(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__LoginNoAuthRequestParameter *ns3__LoginNoAuthRequestParameter, struct _ns3__session *ns3__session);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginSAML(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__LoginSAMLRequestParameter *ns3__LoginSAMLRequestParameter, struct _ns3__session *ns3__session);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginImpersonate(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__LoginImpersonateRequestParameter *ns3__LoginImpersonateRequestParameter, struct _ns3__session *ns3__session);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Logout(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__LogoutRequestParameter *ns3__LogoutRequestParameter, struct __ns1__LogoutResponse *_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__createUserRequestParameter *ns3__createUserRequestParameter, struct ns3__T_USCOREUser *ns3__User);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__deleteUserRequestParameter *ns3__deleteUserRequestParameter, struct __ns1__deleteUserResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__searchUserRequestParameter *ns3__searchUserRequestParameter, struct _ns3__UserList *ns3__UserList);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
