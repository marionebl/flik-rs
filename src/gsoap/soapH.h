/* soapH.h
   Generated by gSOAP 2.8.28 from baseService.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( ((data) ? (soap_default_byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__optionalInt
#define SOAP_TYPE_ns3__optionalInt (11)
#endif

#define soap_default_ns3__optionalInt(soap, a) soap_default_int(soap, a)


#define soap_ns3__optionalInt2s soap_int2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__optionalInt(struct soap*, const char*, int, const int *, const char*);

#define soap_s2ns3__optionalInt soap_s2int

SOAP_FMAC3 int * SOAP_FMAC4 soap_in_ns3__optionalInt(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__optionalInt(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_ns3__optionalInt
#define soap_write_ns3__optionalInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__optionalInt(soap, data, "ns3:optionalInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_ns3__optionalInt(struct soap*, int *, const char*, const char*);

#ifndef soap_read_ns3__optionalInt
#define soap_read_ns3__optionalInt(soap, data) ( ((data) ? (soap_default_ns3__optionalInt(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__optionalInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( ((data) ? (soap_default_int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__optionalLong
#define SOAP_TYPE_ns3__optionalLong (15)
#endif

#define soap_default_ns3__optionalLong(soap, a) soap_default_LONG64(soap, a)


#define soap_ns3__optionalLong2s soap_LONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__optionalLong(struct soap*, const char*, int, const LONG64 *, const char*);

#define soap_s2ns3__optionalLong soap_s2LONG64

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_ns3__optionalLong(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__optionalLong(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_ns3__optionalLong
#define soap_write_ns3__optionalLong(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__optionalLong(soap, data, "ns3:optionalLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_ns3__optionalLong(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_ns3__optionalLong
#define soap_read_ns3__optionalLong(soap, data) ( ((data) ? (soap_default_ns3__optionalLong(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__optionalLong(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__id
#define SOAP_TYPE_ns3__id (10)
#endif

#define soap_default_ns3__id(soap, a) soap_default_LONG64(soap, a)


#define soap_ns3__id2s soap_LONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__id(struct soap*, const char*, int, const LONG64 *, const char*);

#define soap_s2ns3__id soap_s2LONG64

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_ns3__id(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__id(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_ns3__id
#define soap_write_ns3__id(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__id(soap, data, "ns3:id", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_ns3__id(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_ns3__id
#define soap_read_ns3__id(soap, data) ( ((data) ? (soap_default_ns3__id(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__id(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( ((data) ? (soap_default_LONG64(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_LONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__optionalDouble
#define SOAP_TYPE_ns3__optionalDouble (14)
#endif

#define soap_default_ns3__optionalDouble(soap, a) soap_default_double(soap, a)


#define soap_ns3__optionalDouble2s soap_double2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__optionalDouble(struct soap*, const char*, int, const double *, const char*);

#define soap_s2ns3__optionalDouble soap_s2double

SOAP_FMAC3 double * SOAP_FMAC4 soap_in_ns3__optionalDouble(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__optionalDouble(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_ns3__optionalDouble
#define soap_write_ns3__optionalDouble(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__optionalDouble(soap, data, "ns3:optionalDouble", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_ns3__optionalDouble(struct soap*, double *, const char*, const char*);

#ifndef soap_read_ns3__optionalDouble
#define soap_read_ns3__optionalDouble(soap, data) ( ((data) ? (soap_default_ns3__optionalDouble(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__optionalDouble(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( ((data) ? (soap_default_double(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCOREUserState
#define SOAP_TYPE_ns3__T_USCOREUserState (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCOREUserState(struct soap*, enum ns3__T_USCOREUserState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCOREUserState(struct soap*, const char*, int, const enum ns3__T_USCOREUserState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns3__T_USCOREUserState2s(struct soap*, enum ns3__T_USCOREUserState);
SOAP_FMAC3 enum ns3__T_USCOREUserState * SOAP_FMAC4 soap_in_ns3__T_USCOREUserState(struct soap*, const char*, enum ns3__T_USCOREUserState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns3__T_USCOREUserState(struct soap*, const char*, enum ns3__T_USCOREUserState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCOREUserState(struct soap*, const enum ns3__T_USCOREUserState *, const char*, const char*);

#ifndef soap_write_ns3__T_USCOREUserState
#define soap_write_ns3__T_USCOREUserState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__T_USCOREUserState(soap, data, "ns3:T_UserState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns3__T_USCOREUserState * SOAP_FMAC4 soap_get_ns3__T_USCOREUserState(struct soap*, enum ns3__T_USCOREUserState *, const char*, const char*);

#ifndef soap_read_ns3__T_USCOREUserState
#define soap_read_ns3__T_USCOREUserState(soap, data) ( ((data) ? (soap_default_ns3__T_USCOREUserState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCOREUserState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCORELicenseType
#define SOAP_TYPE_ns3__T_USCORELicenseType (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCORELicenseType(struct soap*, enum ns3__T_USCORELicenseType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCORELicenseType(struct soap*, const char*, int, const enum ns3__T_USCORELicenseType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns3__T_USCORELicenseType2s(struct soap*, enum ns3__T_USCORELicenseType);
SOAP_FMAC3 enum ns3__T_USCORELicenseType * SOAP_FMAC4 soap_in_ns3__T_USCORELicenseType(struct soap*, const char*, enum ns3__T_USCORELicenseType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns3__T_USCORELicenseType(struct soap*, const char*, enum ns3__T_USCORELicenseType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCORELicenseType(struct soap*, const enum ns3__T_USCORELicenseType *, const char*, const char*);

#ifndef soap_write_ns3__T_USCORELicenseType
#define soap_write_ns3__T_USCORELicenseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__T_USCORELicenseType(soap, data, "ns3:T_LicenseType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns3__T_USCORELicenseType * SOAP_FMAC4 soap_get_ns3__T_USCORELicenseType(struct soap*, enum ns3__T_USCORELicenseType *, const char*, const char*);

#ifndef soap_read_ns3__T_USCORELicenseType
#define soap_read_ns3__T_USCORELicenseType(soap, data) ( ((data) ? (soap_default_ns3__T_USCORELicenseType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCORELicenseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__optionalBoolean
#define SOAP_TYPE_ns3__optionalBoolean (12)
#endif

#define soap_default_ns3__optionalBoolean(soap, a) soap_default_xsd__boolean(soap, a)


#define soap_ns3__optionalBoolean2s soap_xsd__boolean2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__optionalBoolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);

#define soap_s2ns3__optionalBoolean soap_s2xsd__boolean

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_ns3__optionalBoolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__optionalBoolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_ns3__optionalBoolean
#define soap_write_ns3__optionalBoolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns3__optionalBoolean(soap, data, "ns3:optionalBoolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_ns3__optionalBoolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_ns3__optionalBoolean
#define soap_read_ns3__optionalBoolean(soap, data) ( ((data) ? (soap_default_ns3__optionalBoolean(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__optionalBoolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__boolean(struct soap*, enum xsd__boolean *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( ((data) ? (soap_default_xsd__boolean(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE___ns1__searchUser
#define SOAP_TYPE___ns1__searchUser (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchUser(struct soap*, struct __ns1__searchUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchUser(struct soap*, const struct __ns1__searchUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchUser(struct soap*, const char*, int, const struct __ns1__searchUser *, const char*);
SOAP_FMAC3 struct __ns1__searchUser * SOAP_FMAC4 soap_in___ns1__searchUser(struct soap*, const char*, struct __ns1__searchUser *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchUser(struct soap*, const struct __ns1__searchUser *, const char*, const char*);

#ifndef soap_write___ns1__searchUser
#define soap_write___ns1__searchUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__searchUser(soap, data), 0) || soap_put___ns1__searchUser(soap, data, "-ns1:searchUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__searchUser * SOAP_FMAC4 soap_get___ns1__searchUser(struct soap*, struct __ns1__searchUser *, const char*, const char*);

#ifndef soap_read___ns1__searchUser
#define soap_read___ns1__searchUser(soap, data) ( ((data) ? (soap_default___ns1__searchUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__searchUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__deleteUser
#define SOAP_TYPE___ns1__deleteUser (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteUser(struct soap*, struct __ns1__deleteUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteUser(struct soap*, const struct __ns1__deleteUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteUser(struct soap*, const char*, int, const struct __ns1__deleteUser *, const char*);
SOAP_FMAC3 struct __ns1__deleteUser * SOAP_FMAC4 soap_in___ns1__deleteUser(struct soap*, const char*, struct __ns1__deleteUser *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteUser(struct soap*, const struct __ns1__deleteUser *, const char*, const char*);

#ifndef soap_write___ns1__deleteUser
#define soap_write___ns1__deleteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__deleteUser(soap, data), 0) || soap_put___ns1__deleteUser(soap, data, "-ns1:deleteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__deleteUser * SOAP_FMAC4 soap_get___ns1__deleteUser(struct soap*, struct __ns1__deleteUser *, const char*, const char*);

#ifndef soap_read___ns1__deleteUser
#define soap_read___ns1__deleteUser(soap, data) ( ((data) ? (soap_default___ns1__deleteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__deleteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__deleteUserResponse
#define SOAP_TYPE___ns1__deleteUserResponse (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteUserResponse(struct soap*, struct __ns1__deleteUserResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteUserResponse(struct soap*, const struct __ns1__deleteUserResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteUserResponse(struct soap*, const char*, int, const struct __ns1__deleteUserResponse *, const char*);
SOAP_FMAC3 struct __ns1__deleteUserResponse * SOAP_FMAC4 soap_in___ns1__deleteUserResponse(struct soap*, const char*, struct __ns1__deleteUserResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteUserResponse(struct soap*, const struct __ns1__deleteUserResponse *, const char*, const char*);

#ifndef soap_write___ns1__deleteUserResponse
#define soap_write___ns1__deleteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__deleteUserResponse(soap, data), 0) || soap_put___ns1__deleteUserResponse(soap, data, "-ns1:deleteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__deleteUserResponse * SOAP_FMAC4 soap_get___ns1__deleteUserResponse(struct soap*, struct __ns1__deleteUserResponse *, const char*, const char*);

#ifndef soap_read___ns1__deleteUserResponse
#define soap_read___ns1__deleteUserResponse(soap, data) ( ((data) ? (soap_default___ns1__deleteUserResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__deleteUserResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__createUser
#define SOAP_TYPE___ns1__createUser (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__createUser(struct soap*, struct __ns1__createUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__createUser(struct soap*, const struct __ns1__createUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__createUser(struct soap*, const char*, int, const struct __ns1__createUser *, const char*);
SOAP_FMAC3 struct __ns1__createUser * SOAP_FMAC4 soap_in___ns1__createUser(struct soap*, const char*, struct __ns1__createUser *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__createUser(struct soap*, const struct __ns1__createUser *, const char*, const char*);

#ifndef soap_write___ns1__createUser
#define soap_write___ns1__createUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__createUser(soap, data), 0) || soap_put___ns1__createUser(soap, data, "-ns1:createUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__createUser * SOAP_FMAC4 soap_get___ns1__createUser(struct soap*, struct __ns1__createUser *, const char*, const char*);

#ifndef soap_read___ns1__createUser
#define soap_read___ns1__createUser(soap, data) ( ((data) ? (soap_default___ns1__createUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__createUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__Logout
#define SOAP_TYPE___ns1__Logout (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Logout(struct soap*, struct __ns1__Logout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Logout(struct soap*, const struct __ns1__Logout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Logout(struct soap*, const char*, int, const struct __ns1__Logout *, const char*);
SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_in___ns1__Logout(struct soap*, const char*, struct __ns1__Logout *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Logout(struct soap*, const struct __ns1__Logout *, const char*, const char*);

#ifndef soap_write___ns1__Logout
#define soap_write___ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Logout(soap, data), 0) || soap_put___ns1__Logout(soap, data, "-ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_get___ns1__Logout(struct soap*, struct __ns1__Logout *, const char*, const char*);

#ifndef soap_read___ns1__Logout
#define soap_read___ns1__Logout(soap, data) ( ((data) ? (soap_default___ns1__Logout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__Logout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__LogoutResponse
#define SOAP_TYPE___ns1__LogoutResponse (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LogoutResponse(struct soap*, struct __ns1__LogoutResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LogoutResponse(struct soap*, const struct __ns1__LogoutResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LogoutResponse(struct soap*, const char*, int, const struct __ns1__LogoutResponse *, const char*);
SOAP_FMAC3 struct __ns1__LogoutResponse * SOAP_FMAC4 soap_in___ns1__LogoutResponse(struct soap*, const char*, struct __ns1__LogoutResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LogoutResponse(struct soap*, const struct __ns1__LogoutResponse *, const char*, const char*);

#ifndef soap_write___ns1__LogoutResponse
#define soap_write___ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LogoutResponse(soap, data), 0) || soap_put___ns1__LogoutResponse(soap, data, "-ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LogoutResponse * SOAP_FMAC4 soap_get___ns1__LogoutResponse(struct soap*, struct __ns1__LogoutResponse *, const char*, const char*);

#ifndef soap_read___ns1__LogoutResponse
#define soap_read___ns1__LogoutResponse(soap, data) ( ((data) ? (soap_default___ns1__LogoutResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__LogoutResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__LoginImpersonate
#define SOAP_TYPE___ns1__LoginImpersonate (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginImpersonate(struct soap*, struct __ns1__LoginImpersonate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginImpersonate(struct soap*, const struct __ns1__LoginImpersonate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginImpersonate(struct soap*, const char*, int, const struct __ns1__LoginImpersonate *, const char*);
SOAP_FMAC3 struct __ns1__LoginImpersonate * SOAP_FMAC4 soap_in___ns1__LoginImpersonate(struct soap*, const char*, struct __ns1__LoginImpersonate *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginImpersonate(struct soap*, const struct __ns1__LoginImpersonate *, const char*, const char*);

#ifndef soap_write___ns1__LoginImpersonate
#define soap_write___ns1__LoginImpersonate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginImpersonate(soap, data), 0) || soap_put___ns1__LoginImpersonate(soap, data, "-ns1:LoginImpersonate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginImpersonate * SOAP_FMAC4 soap_get___ns1__LoginImpersonate(struct soap*, struct __ns1__LoginImpersonate *, const char*, const char*);

#ifndef soap_read___ns1__LoginImpersonate
#define soap_read___ns1__LoginImpersonate(soap, data) ( ((data) ? (soap_default___ns1__LoginImpersonate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__LoginImpersonate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__LoginSAML
#define SOAP_TYPE___ns1__LoginSAML (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginSAML(struct soap*, struct __ns1__LoginSAML *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginSAML(struct soap*, const struct __ns1__LoginSAML *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginSAML(struct soap*, const char*, int, const struct __ns1__LoginSAML *, const char*);
SOAP_FMAC3 struct __ns1__LoginSAML * SOAP_FMAC4 soap_in___ns1__LoginSAML(struct soap*, const char*, struct __ns1__LoginSAML *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginSAML(struct soap*, const struct __ns1__LoginSAML *, const char*, const char*);

#ifndef soap_write___ns1__LoginSAML
#define soap_write___ns1__LoginSAML(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginSAML(soap, data), 0) || soap_put___ns1__LoginSAML(soap, data, "-ns1:LoginSAML", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginSAML * SOAP_FMAC4 soap_get___ns1__LoginSAML(struct soap*, struct __ns1__LoginSAML *, const char*, const char*);

#ifndef soap_read___ns1__LoginSAML
#define soap_read___ns1__LoginSAML(soap, data) ( ((data) ? (soap_default___ns1__LoginSAML(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__LoginSAML(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__LoginNoAuth
#define SOAP_TYPE___ns1__LoginNoAuth (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginNoAuth(struct soap*, struct __ns1__LoginNoAuth *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginNoAuth(struct soap*, const struct __ns1__LoginNoAuth *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginNoAuth(struct soap*, const char*, int, const struct __ns1__LoginNoAuth *, const char*);
SOAP_FMAC3 struct __ns1__LoginNoAuth * SOAP_FMAC4 soap_in___ns1__LoginNoAuth(struct soap*, const char*, struct __ns1__LoginNoAuth *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginNoAuth(struct soap*, const struct __ns1__LoginNoAuth *, const char*, const char*);

#ifndef soap_write___ns1__LoginNoAuth
#define soap_write___ns1__LoginNoAuth(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginNoAuth(soap, data), 0) || soap_put___ns1__LoginNoAuth(soap, data, "-ns1:LoginNoAuth", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginNoAuth * SOAP_FMAC4 soap_get___ns1__LoginNoAuth(struct soap*, struct __ns1__LoginNoAuth *, const char*, const char*);

#ifndef soap_read___ns1__LoginNoAuth
#define soap_read___ns1__LoginNoAuth(soap, data) ( ((data) ? (soap_default___ns1__LoginNoAuth(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__LoginNoAuth(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login(struct soap*, struct __ns1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login(struct soap*, const struct __ns1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login(struct soap*, const char*, int, const struct __ns1__Login *, const char*);
SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_in___ns1__Login(struct soap*, const char*, struct __ns1__Login *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login(struct soap*, const struct __ns1__Login *, const char*, const char*);

#ifndef soap_write___ns1__Login
#define soap_write___ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login(soap, data), 0) || soap_put___ns1__Login(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_get___ns1__Login(struct soap*, struct __ns1__Login *, const char*, const char*);

#ifndef soap_read___ns1__Login
#define soap_read___ns1__Login(soap, data) ( ((data) ? (soap_default___ns1__Login(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__Login(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE__ns2__InvalidConcurrentLicenseException
#define SOAP_TYPE__ns2__InvalidConcurrentLicenseException (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidConcurrentLicenseException(struct soap*, struct _ns2__InvalidConcurrentLicenseException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidConcurrentLicenseException(struct soap*, const struct _ns2__InvalidConcurrentLicenseException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidConcurrentLicenseException(struct soap*, const char*, int, const struct _ns2__InvalidConcurrentLicenseException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidConcurrentLicenseException * SOAP_FMAC4 soap_in__ns2__InvalidConcurrentLicenseException(struct soap*, const char*, struct _ns2__InvalidConcurrentLicenseException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidConcurrentLicenseException(struct soap*, const struct _ns2__InvalidConcurrentLicenseException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidConcurrentLicenseException
#define soap_write__ns2__InvalidConcurrentLicenseException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidConcurrentLicenseException(soap, data), 0) || soap_put__ns2__InvalidConcurrentLicenseException(soap, data, "ns2:InvalidConcurrentLicenseException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidConcurrentLicenseException * SOAP_FMAC4 soap_get__ns2__InvalidConcurrentLicenseException(struct soap*, struct _ns2__InvalidConcurrentLicenseException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidConcurrentLicenseException
#define soap_read__ns2__InvalidConcurrentLicenseException(soap, data) ( ((data) ? (soap_default__ns2__InvalidConcurrentLicenseException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidConcurrentLicenseException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidNamedLicenseException
#define SOAP_TYPE__ns2__InvalidNamedLicenseException (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidNamedLicenseException(struct soap*, struct _ns2__InvalidNamedLicenseException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidNamedLicenseException(struct soap*, const struct _ns2__InvalidNamedLicenseException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidNamedLicenseException(struct soap*, const char*, int, const struct _ns2__InvalidNamedLicenseException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidNamedLicenseException * SOAP_FMAC4 soap_in__ns2__InvalidNamedLicenseException(struct soap*, const char*, struct _ns2__InvalidNamedLicenseException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidNamedLicenseException(struct soap*, const struct _ns2__InvalidNamedLicenseException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidNamedLicenseException
#define soap_write__ns2__InvalidNamedLicenseException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidNamedLicenseException(soap, data), 0) || soap_put__ns2__InvalidNamedLicenseException(soap, data, "ns2:InvalidNamedLicenseException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidNamedLicenseException * SOAP_FMAC4 soap_get__ns2__InvalidNamedLicenseException(struct soap*, struct _ns2__InvalidNamedLicenseException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidNamedLicenseException
#define soap_read__ns2__InvalidNamedLicenseException(soap, data) ( ((data) ? (soap_default__ns2__InvalidNamedLicenseException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidNamedLicenseException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidNrOfImpersonationsException
#define SOAP_TYPE__ns2__InvalidNrOfImpersonationsException (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidNrOfImpersonationsException(struct soap*, struct _ns2__InvalidNrOfImpersonationsException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidNrOfImpersonationsException(struct soap*, const struct _ns2__InvalidNrOfImpersonationsException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidNrOfImpersonationsException(struct soap*, const char*, int, const struct _ns2__InvalidNrOfImpersonationsException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidNrOfImpersonationsException * SOAP_FMAC4 soap_in__ns2__InvalidNrOfImpersonationsException(struct soap*, const char*, struct _ns2__InvalidNrOfImpersonationsException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidNrOfImpersonationsException(struct soap*, const struct _ns2__InvalidNrOfImpersonationsException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidNrOfImpersonationsException
#define soap_write__ns2__InvalidNrOfImpersonationsException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidNrOfImpersonationsException(soap, data), 0) || soap_put__ns2__InvalidNrOfImpersonationsException(soap, data, "ns2:InvalidNrOfImpersonationsException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidNrOfImpersonationsException * SOAP_FMAC4 soap_get__ns2__InvalidNrOfImpersonationsException(struct soap*, struct _ns2__InvalidNrOfImpersonationsException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidNrOfImpersonationsException
#define soap_read__ns2__InvalidNrOfImpersonationsException(soap, data) ( ((data) ? (soap_default__ns2__InvalidNrOfImpersonationsException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidNrOfImpersonationsException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__ImpersonatedUserNotFoundException
#define SOAP_TYPE__ns2__ImpersonatedUserNotFoundException (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__ImpersonatedUserNotFoundException(struct soap*, struct _ns2__ImpersonatedUserNotFoundException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__ImpersonatedUserNotFoundException(struct soap*, const struct _ns2__ImpersonatedUserNotFoundException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__ImpersonatedUserNotFoundException(struct soap*, const char*, int, const struct _ns2__ImpersonatedUserNotFoundException *, const char*);
SOAP_FMAC3 struct _ns2__ImpersonatedUserNotFoundException * SOAP_FMAC4 soap_in__ns2__ImpersonatedUserNotFoundException(struct soap*, const char*, struct _ns2__ImpersonatedUserNotFoundException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__ImpersonatedUserNotFoundException(struct soap*, const struct _ns2__ImpersonatedUserNotFoundException *, const char*, const char*);

#ifndef soap_write__ns2__ImpersonatedUserNotFoundException
#define soap_write__ns2__ImpersonatedUserNotFoundException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__ImpersonatedUserNotFoundException(soap, data), 0) || soap_put__ns2__ImpersonatedUserNotFoundException(soap, data, "ns2:ImpersonatedUserNotFoundException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__ImpersonatedUserNotFoundException * SOAP_FMAC4 soap_get__ns2__ImpersonatedUserNotFoundException(struct soap*, struct _ns2__ImpersonatedUserNotFoundException *, const char*, const char*);

#ifndef soap_read__ns2__ImpersonatedUserNotFoundException
#define soap_read__ns2__ImpersonatedUserNotFoundException(soap, data) ( ((data) ? (soap_default__ns2__ImpersonatedUserNotFoundException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__ImpersonatedUserNotFoundException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__ServerMaintenanceException
#define SOAP_TYPE__ns2__ServerMaintenanceException (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__ServerMaintenanceException(struct soap*, struct _ns2__ServerMaintenanceException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__ServerMaintenanceException(struct soap*, const struct _ns2__ServerMaintenanceException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__ServerMaintenanceException(struct soap*, const char*, int, const struct _ns2__ServerMaintenanceException *, const char*);
SOAP_FMAC3 struct _ns2__ServerMaintenanceException * SOAP_FMAC4 soap_in__ns2__ServerMaintenanceException(struct soap*, const char*, struct _ns2__ServerMaintenanceException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__ServerMaintenanceException(struct soap*, const struct _ns2__ServerMaintenanceException *, const char*, const char*);

#ifndef soap_write__ns2__ServerMaintenanceException
#define soap_write__ns2__ServerMaintenanceException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__ServerMaintenanceException(soap, data), 0) || soap_put__ns2__ServerMaintenanceException(soap, data, "ns2:ServerMaintenanceException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__ServerMaintenanceException * SOAP_FMAC4 soap_get__ns2__ServerMaintenanceException(struct soap*, struct _ns2__ServerMaintenanceException *, const char*, const char*);

#ifndef soap_read__ns2__ServerMaintenanceException
#define soap_read__ns2__ServerMaintenanceException(soap, data) ( ((data) ? (soap_default__ns2__ServerMaintenanceException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__ServerMaintenanceException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidDatesException
#define SOAP_TYPE__ns2__InvalidDatesException (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidDatesException(struct soap*, struct _ns2__InvalidDatesException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidDatesException(struct soap*, const struct _ns2__InvalidDatesException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidDatesException(struct soap*, const char*, int, const struct _ns2__InvalidDatesException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidDatesException * SOAP_FMAC4 soap_in__ns2__InvalidDatesException(struct soap*, const char*, struct _ns2__InvalidDatesException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidDatesException(struct soap*, const struct _ns2__InvalidDatesException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidDatesException
#define soap_write__ns2__InvalidDatesException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidDatesException(soap, data), 0) || soap_put__ns2__InvalidDatesException(soap, data, "ns2:InvalidDatesException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidDatesException * SOAP_FMAC4 soap_get__ns2__InvalidDatesException(struct soap*, struct _ns2__InvalidDatesException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidDatesException
#define soap_read__ns2__InvalidDatesException(soap, data) ( ((data) ? (soap_default__ns2__InvalidDatesException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidDatesException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidUsernameException
#define SOAP_TYPE__ns2__InvalidUsernameException (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidUsernameException(struct soap*, struct _ns2__InvalidUsernameException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidUsernameException(struct soap*, const struct _ns2__InvalidUsernameException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidUsernameException(struct soap*, const char*, int, const struct _ns2__InvalidUsernameException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidUsernameException * SOAP_FMAC4 soap_in__ns2__InvalidUsernameException(struct soap*, const char*, struct _ns2__InvalidUsernameException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidUsernameException(struct soap*, const struct _ns2__InvalidUsernameException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidUsernameException
#define soap_write__ns2__InvalidUsernameException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidUsernameException(soap, data), 0) || soap_put__ns2__InvalidUsernameException(soap, data, "ns2:InvalidUsernameException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidUsernameException * SOAP_FMAC4 soap_get__ns2__InvalidUsernameException(struct soap*, struct _ns2__InvalidUsernameException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidUsernameException
#define soap_read__ns2__InvalidUsernameException(soap, data) ( ((data) ? (soap_default__ns2__InvalidUsernameException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidUsernameException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidUsernamePasswordCombinationException
#define SOAP_TYPE__ns2__InvalidUsernamePasswordCombinationException (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidUsernamePasswordCombinationException(struct soap*, struct _ns2__InvalidUsernamePasswordCombinationException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidUsernamePasswordCombinationException(struct soap*, const struct _ns2__InvalidUsernamePasswordCombinationException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidUsernamePasswordCombinationException(struct soap*, const char*, int, const struct _ns2__InvalidUsernamePasswordCombinationException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidUsernamePasswordCombinationException * SOAP_FMAC4 soap_in__ns2__InvalidUsernamePasswordCombinationException(struct soap*, const char*, struct _ns2__InvalidUsernamePasswordCombinationException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidUsernamePasswordCombinationException(struct soap*, const struct _ns2__InvalidUsernamePasswordCombinationException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidUsernamePasswordCombinationException
#define soap_write__ns2__InvalidUsernamePasswordCombinationException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidUsernamePasswordCombinationException(soap, data), 0) || soap_put__ns2__InvalidUsernamePasswordCombinationException(soap, data, "ns2:InvalidUsernamePasswordCombinationException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidUsernamePasswordCombinationException * SOAP_FMAC4 soap_get__ns2__InvalidUsernamePasswordCombinationException(struct soap*, struct _ns2__InvalidUsernamePasswordCombinationException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidUsernamePasswordCombinationException
#define soap_read__ns2__InvalidUsernamePasswordCombinationException(soap, data) ( ((data) ? (soap_default__ns2__InvalidUsernamePasswordCombinationException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidUsernamePasswordCombinationException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__PermissionDeniedException
#define SOAP_TYPE__ns2__PermissionDeniedException (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__PermissionDeniedException(struct soap*, struct _ns2__PermissionDeniedException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__PermissionDeniedException(struct soap*, const struct _ns2__PermissionDeniedException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__PermissionDeniedException(struct soap*, const char*, int, const struct _ns2__PermissionDeniedException *, const char*);
SOAP_FMAC3 struct _ns2__PermissionDeniedException * SOAP_FMAC4 soap_in__ns2__PermissionDeniedException(struct soap*, const char*, struct _ns2__PermissionDeniedException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__PermissionDeniedException(struct soap*, const struct _ns2__PermissionDeniedException *, const char*, const char*);

#ifndef soap_write__ns2__PermissionDeniedException
#define soap_write__ns2__PermissionDeniedException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__PermissionDeniedException(soap, data), 0) || soap_put__ns2__PermissionDeniedException(soap, data, "ns2:PermissionDeniedException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__PermissionDeniedException * SOAP_FMAC4 soap_get__ns2__PermissionDeniedException(struct soap*, struct _ns2__PermissionDeniedException *, const char*, const char*);

#ifndef soap_read__ns2__PermissionDeniedException
#define soap_read__ns2__PermissionDeniedException(soap, data) ( ((data) ? (soap_default__ns2__PermissionDeniedException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__PermissionDeniedException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidClientException
#define SOAP_TYPE__ns2__InvalidClientException (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidClientException(struct soap*, struct _ns2__InvalidClientException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidClientException(struct soap*, const struct _ns2__InvalidClientException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidClientException(struct soap*, const char*, int, const struct _ns2__InvalidClientException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidClientException * SOAP_FMAC4 soap_in__ns2__InvalidClientException(struct soap*, const char*, struct _ns2__InvalidClientException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidClientException(struct soap*, const struct _ns2__InvalidClientException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidClientException
#define soap_write__ns2__InvalidClientException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidClientException(soap, data), 0) || soap_put__ns2__InvalidClientException(soap, data, "ns2:InvalidClientException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidClientException * SOAP_FMAC4 soap_get__ns2__InvalidClientException(struct soap*, struct _ns2__InvalidClientException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidClientException
#define soap_read__ns2__InvalidClientException(soap, data) ( ((data) ? (soap_default__ns2__InvalidClientException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidClientException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidSessionException
#define SOAP_TYPE__ns2__InvalidSessionException (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidSessionException(struct soap*, struct _ns2__InvalidSessionException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidSessionException(struct soap*, const struct _ns2__InvalidSessionException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidSessionException(struct soap*, const char*, int, const struct _ns2__InvalidSessionException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidSessionException * SOAP_FMAC4 soap_in__ns2__InvalidSessionException(struct soap*, const char*, struct _ns2__InvalidSessionException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidSessionException(struct soap*, const struct _ns2__InvalidSessionException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidSessionException
#define soap_write__ns2__InvalidSessionException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidSessionException(soap, data), 0) || soap_put__ns2__InvalidSessionException(soap, data, "ns2:InvalidSessionException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidSessionException * SOAP_FMAC4 soap_get__ns2__InvalidSessionException(struct soap*, struct _ns2__InvalidSessionException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidSessionException
#define soap_read__ns2__InvalidSessionException(soap, data) ( ((data) ? (soap_default__ns2__InvalidSessionException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidSessionException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__InvalidLicenseException
#define SOAP_TYPE_ns2__InvalidLicenseException (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__InvalidLicenseException(struct soap*, struct ns2__InvalidLicenseException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__InvalidLicenseException(struct soap*, const struct ns2__InvalidLicenseException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__InvalidLicenseException(struct soap*, const char*, int, const struct ns2__InvalidLicenseException *, const char*);
SOAP_FMAC3 struct ns2__InvalidLicenseException * SOAP_FMAC4 soap_in_ns2__InvalidLicenseException(struct soap*, const char*, struct ns2__InvalidLicenseException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__InvalidLicenseException(struct soap*, const struct ns2__InvalidLicenseException *, const char*, const char*);

#ifndef soap_write_ns2__InvalidLicenseException
#define soap_write_ns2__InvalidLicenseException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__InvalidLicenseException(soap, data), 0) || soap_put_ns2__InvalidLicenseException(soap, data, "ns2:InvalidLicenseException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__InvalidLicenseException * SOAP_FMAC4 soap_get_ns2__InvalidLicenseException(struct soap*, struct ns2__InvalidLicenseException *, const char*, const char*);

#ifndef soap_read_ns2__InvalidLicenseException
#define soap_read_ns2__InvalidLicenseException(soap, data) ( ((data) ? (soap_default_ns2__InvalidLicenseException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__InvalidLicenseException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__GeneralWebserviceException
#define SOAP_TYPE__ns2__GeneralWebserviceException (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__GeneralWebserviceException(struct soap*, struct _ns2__GeneralWebserviceException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__GeneralWebserviceException(struct soap*, const struct _ns2__GeneralWebserviceException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GeneralWebserviceException(struct soap*, const char*, int, const struct _ns2__GeneralWebserviceException *, const char*);
SOAP_FMAC3 struct _ns2__GeneralWebserviceException * SOAP_FMAC4 soap_in__ns2__GeneralWebserviceException(struct soap*, const char*, struct _ns2__GeneralWebserviceException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__GeneralWebserviceException(struct soap*, const struct _ns2__GeneralWebserviceException *, const char*, const char*);

#ifndef soap_write__ns2__GeneralWebserviceException
#define soap_write__ns2__GeneralWebserviceException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__GeneralWebserviceException(soap, data), 0) || soap_put__ns2__GeneralWebserviceException(soap, data, "ns2:GeneralWebserviceException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__GeneralWebserviceException * SOAP_FMAC4 soap_get__ns2__GeneralWebserviceException(struct soap*, struct _ns2__GeneralWebserviceException *, const char*, const char*);

#ifndef soap_read__ns2__GeneralWebserviceException
#define soap_read__ns2__GeneralWebserviceException(soap, data) ( ((data) ? (soap_default__ns2__GeneralWebserviceException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__GeneralWebserviceException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__AssertionException
#define SOAP_TYPE__ns2__AssertionException (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__AssertionException(struct soap*, struct _ns2__AssertionException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__AssertionException(struct soap*, const struct _ns2__AssertionException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__AssertionException(struct soap*, const char*, int, const struct _ns2__AssertionException *, const char*);
SOAP_FMAC3 struct _ns2__AssertionException * SOAP_FMAC4 soap_in__ns2__AssertionException(struct soap*, const char*, struct _ns2__AssertionException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__AssertionException(struct soap*, const struct _ns2__AssertionException *, const char*, const char*);

#ifndef soap_write__ns2__AssertionException
#define soap_write__ns2__AssertionException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__AssertionException(soap, data), 0) || soap_put__ns2__AssertionException(soap, data, "ns2:AssertionException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__AssertionException * SOAP_FMAC4 soap_get__ns2__AssertionException(struct soap*, struct _ns2__AssertionException *, const char*, const char*);

#ifndef soap_read__ns2__AssertionException
#define soap_read__ns2__AssertionException(soap, data) ( ((data) ? (soap_default__ns2__AssertionException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__AssertionException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__InvalidParameterException
#define SOAP_TYPE__ns2__InvalidParameterException (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__InvalidParameterException(struct soap*, struct _ns2__InvalidParameterException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__InvalidParameterException(struct soap*, const struct _ns2__InvalidParameterException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__InvalidParameterException(struct soap*, const char*, int, const struct _ns2__InvalidParameterException *, const char*);
SOAP_FMAC3 struct _ns2__InvalidParameterException * SOAP_FMAC4 soap_in__ns2__InvalidParameterException(struct soap*, const char*, struct _ns2__InvalidParameterException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__InvalidParameterException(struct soap*, const struct _ns2__InvalidParameterException *, const char*, const char*);

#ifndef soap_write__ns2__InvalidParameterException
#define soap_write__ns2__InvalidParameterException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__InvalidParameterException(soap, data), 0) || soap_put__ns2__InvalidParameterException(soap, data, "ns2:InvalidParameterException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidParameterException * SOAP_FMAC4 soap_get__ns2__InvalidParameterException(struct soap*, struct _ns2__InvalidParameterException *, const char*, const char*);

#ifndef soap_read__ns2__InvalidParameterException
#define soap_read__ns2__InvalidParameterException(soap, data) ( ((data) ? (soap_default__ns2__InvalidParameterException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__InvalidParameterException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns2__WeekFinishedException
#define SOAP_TYPE__ns2__WeekFinishedException (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns2__WeekFinishedException(struct soap*, struct _ns2__WeekFinishedException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns2__WeekFinishedException(struct soap*, const struct _ns2__WeekFinishedException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__WeekFinishedException(struct soap*, const char*, int, const struct _ns2__WeekFinishedException *, const char*);
SOAP_FMAC3 struct _ns2__WeekFinishedException * SOAP_FMAC4 soap_in__ns2__WeekFinishedException(struct soap*, const char*, struct _ns2__WeekFinishedException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns2__WeekFinishedException(struct soap*, const struct _ns2__WeekFinishedException *, const char*, const char*);

#ifndef soap_write__ns2__WeekFinishedException
#define soap_write__ns2__WeekFinishedException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns2__WeekFinishedException(soap, data), 0) || soap_put__ns2__WeekFinishedException(soap, data, "ns2:WeekFinishedException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__WeekFinishedException * SOAP_FMAC4 soap_get__ns2__WeekFinishedException(struct soap*, struct _ns2__WeekFinishedException *, const char*, const char*);

#ifndef soap_read__ns2__WeekFinishedException
#define soap_read__ns2__WeekFinishedException(soap, data) ( ((data) ? (soap_default__ns2__WeekFinishedException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns2__WeekFinishedException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__UserManagementException
#define SOAP_TYPE_ns2__UserManagementException (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__UserManagementException(struct soap*, struct ns2__UserManagementException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__UserManagementException(struct soap*, const struct ns2__UserManagementException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__UserManagementException(struct soap*, const char*, int, const struct ns2__UserManagementException *, const char*);
SOAP_FMAC3 struct ns2__UserManagementException * SOAP_FMAC4 soap_in_ns2__UserManagementException(struct soap*, const char*, struct ns2__UserManagementException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__UserManagementException(struct soap*, const struct ns2__UserManagementException *, const char*, const char*);

#ifndef soap_write_ns2__UserManagementException
#define soap_write_ns2__UserManagementException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__UserManagementException(soap, data), 0) || soap_put_ns2__UserManagementException(soap, data, "ns2:UserManagementException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__UserManagementException * SOAP_FMAC4 soap_get_ns2__UserManagementException(struct soap*, struct ns2__UserManagementException *, const char*, const char*);

#ifndef soap_read_ns2__UserManagementException
#define soap_read_ns2__UserManagementException(soap, data) ( ((data) ? (soap_default_ns2__UserManagementException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__UserManagementException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__UserList
#define SOAP_TYPE__ns3__UserList (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__UserList(struct soap*, struct _ns3__UserList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__UserList(struct soap*, const struct _ns3__UserList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__UserList(struct soap*, const char*, int, const struct _ns3__UserList *, const char*);
SOAP_FMAC3 struct _ns3__UserList * SOAP_FMAC4 soap_in__ns3__UserList(struct soap*, const char*, struct _ns3__UserList *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__UserList(struct soap*, const struct _ns3__UserList *, const char*, const char*);

#ifndef soap_write__ns3__UserList
#define soap_write__ns3__UserList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__UserList(soap, data), 0) || soap_put__ns3__UserList(soap, data, "ns3:UserList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__UserList * SOAP_FMAC4 soap_get__ns3__UserList(struct soap*, struct _ns3__UserList *, const char*, const char*);

#ifndef soap_read__ns3__UserList
#define soap_read__ns3__UserList(soap, data) ( ((data) ? (soap_default__ns3__UserList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__UserList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__deleteUserRequestParameter
#define SOAP_TYPE__ns3__deleteUserRequestParameter (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__deleteUserRequestParameter(struct soap*, struct _ns3__deleteUserRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__deleteUserRequestParameter(struct soap*, const struct _ns3__deleteUserRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__deleteUserRequestParameter(struct soap*, const char*, int, const struct _ns3__deleteUserRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__deleteUserRequestParameter * SOAP_FMAC4 soap_in__ns3__deleteUserRequestParameter(struct soap*, const char*, struct _ns3__deleteUserRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__deleteUserRequestParameter(struct soap*, const struct _ns3__deleteUserRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__deleteUserRequestParameter
#define soap_write__ns3__deleteUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__deleteUserRequestParameter(soap, data), 0) || soap_put__ns3__deleteUserRequestParameter(soap, data, "ns3:deleteUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__deleteUserRequestParameter * SOAP_FMAC4 soap_get__ns3__deleteUserRequestParameter(struct soap*, struct _ns3__deleteUserRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__deleteUserRequestParameter
#define soap_read__ns3__deleteUserRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__deleteUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__deleteUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__searchUserRequestParameter
#define SOAP_TYPE__ns3__searchUserRequestParameter (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__searchUserRequestParameter(struct soap*, struct _ns3__searchUserRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__searchUserRequestParameter(struct soap*, const struct _ns3__searchUserRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__searchUserRequestParameter(struct soap*, const char*, int, const struct _ns3__searchUserRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__searchUserRequestParameter * SOAP_FMAC4 soap_in__ns3__searchUserRequestParameter(struct soap*, const char*, struct _ns3__searchUserRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__searchUserRequestParameter(struct soap*, const struct _ns3__searchUserRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__searchUserRequestParameter
#define soap_write__ns3__searchUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__searchUserRequestParameter(soap, data), 0) || soap_put__ns3__searchUserRequestParameter(soap, data, "ns3:searchUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__searchUserRequestParameter * SOAP_FMAC4 soap_get__ns3__searchUserRequestParameter(struct soap*, struct _ns3__searchUserRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__searchUserRequestParameter
#define soap_read__ns3__searchUserRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__searchUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__searchUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__createUserRequestParameter
#define SOAP_TYPE__ns3__createUserRequestParameter (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__createUserRequestParameter(struct soap*, struct _ns3__createUserRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__createUserRequestParameter(struct soap*, const struct _ns3__createUserRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__createUserRequestParameter(struct soap*, const char*, int, const struct _ns3__createUserRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__createUserRequestParameter * SOAP_FMAC4 soap_in__ns3__createUserRequestParameter(struct soap*, const char*, struct _ns3__createUserRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__createUserRequestParameter(struct soap*, const struct _ns3__createUserRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__createUserRequestParameter
#define soap_write__ns3__createUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__createUserRequestParameter(soap, data), 0) || soap_put__ns3__createUserRequestParameter(soap, data, "ns3:createUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__createUserRequestParameter * SOAP_FMAC4 soap_get__ns3__createUserRequestParameter(struct soap*, struct _ns3__createUserRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__createUserRequestParameter
#define soap_read__ns3__createUserRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__createUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__createUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__LogoutRequestParameter
#define SOAP_TYPE__ns3__LogoutRequestParameter (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__LogoutRequestParameter(struct soap*, struct _ns3__LogoutRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__LogoutRequestParameter(struct soap*, const struct _ns3__LogoutRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__LogoutRequestParameter(struct soap*, const char*, int, const struct _ns3__LogoutRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__LogoutRequestParameter * SOAP_FMAC4 soap_in__ns3__LogoutRequestParameter(struct soap*, const char*, struct _ns3__LogoutRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__LogoutRequestParameter(struct soap*, const struct _ns3__LogoutRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__LogoutRequestParameter
#define soap_write__ns3__LogoutRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__LogoutRequestParameter(soap, data), 0) || soap_put__ns3__LogoutRequestParameter(soap, data, "ns3:LogoutRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LogoutRequestParameter * SOAP_FMAC4 soap_get__ns3__LogoutRequestParameter(struct soap*, struct _ns3__LogoutRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__LogoutRequestParameter
#define soap_read__ns3__LogoutRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__LogoutRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__LogoutRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__LoginImpersonateRequestParameter
#define SOAP_TYPE__ns3__LoginImpersonateRequestParameter (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__LoginImpersonateRequestParameter(struct soap*, struct _ns3__LoginImpersonateRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__LoginImpersonateRequestParameter(struct soap*, const struct _ns3__LoginImpersonateRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__LoginImpersonateRequestParameter(struct soap*, const char*, int, const struct _ns3__LoginImpersonateRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__LoginImpersonateRequestParameter * SOAP_FMAC4 soap_in__ns3__LoginImpersonateRequestParameter(struct soap*, const char*, struct _ns3__LoginImpersonateRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__LoginImpersonateRequestParameter(struct soap*, const struct _ns3__LoginImpersonateRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__LoginImpersonateRequestParameter
#define soap_write__ns3__LoginImpersonateRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__LoginImpersonateRequestParameter(soap, data), 0) || soap_put__ns3__LoginImpersonateRequestParameter(soap, data, "ns3:LoginImpersonateRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginImpersonateRequestParameter * SOAP_FMAC4 soap_get__ns3__LoginImpersonateRequestParameter(struct soap*, struct _ns3__LoginImpersonateRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__LoginImpersonateRequestParameter
#define soap_read__ns3__LoginImpersonateRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__LoginImpersonateRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__LoginImpersonateRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__LoginSAMLRequestParameter
#define SOAP_TYPE__ns3__LoginSAMLRequestParameter (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__LoginSAMLRequestParameter(struct soap*, struct _ns3__LoginSAMLRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__LoginSAMLRequestParameter(struct soap*, const struct _ns3__LoginSAMLRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__LoginSAMLRequestParameter(struct soap*, const char*, int, const struct _ns3__LoginSAMLRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__LoginSAMLRequestParameter * SOAP_FMAC4 soap_in__ns3__LoginSAMLRequestParameter(struct soap*, const char*, struct _ns3__LoginSAMLRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__LoginSAMLRequestParameter(struct soap*, const struct _ns3__LoginSAMLRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__LoginSAMLRequestParameter
#define soap_write__ns3__LoginSAMLRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__LoginSAMLRequestParameter(soap, data), 0) || soap_put__ns3__LoginSAMLRequestParameter(soap, data, "ns3:LoginSAMLRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginSAMLRequestParameter * SOAP_FMAC4 soap_get__ns3__LoginSAMLRequestParameter(struct soap*, struct _ns3__LoginSAMLRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__LoginSAMLRequestParameter
#define soap_read__ns3__LoginSAMLRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__LoginSAMLRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__LoginSAMLRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__LoginNoAuthRequestParameter
#define SOAP_TYPE__ns3__LoginNoAuthRequestParameter (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__LoginNoAuthRequestParameter(struct soap*, struct _ns3__LoginNoAuthRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__LoginNoAuthRequestParameter(struct soap*, const struct _ns3__LoginNoAuthRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__LoginNoAuthRequestParameter(struct soap*, const char*, int, const struct _ns3__LoginNoAuthRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__LoginNoAuthRequestParameter * SOAP_FMAC4 soap_in__ns3__LoginNoAuthRequestParameter(struct soap*, const char*, struct _ns3__LoginNoAuthRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__LoginNoAuthRequestParameter(struct soap*, const struct _ns3__LoginNoAuthRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__LoginNoAuthRequestParameter
#define soap_write__ns3__LoginNoAuthRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__LoginNoAuthRequestParameter(soap, data), 0) || soap_put__ns3__LoginNoAuthRequestParameter(soap, data, "ns3:LoginNoAuthRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginNoAuthRequestParameter * SOAP_FMAC4 soap_get__ns3__LoginNoAuthRequestParameter(struct soap*, struct _ns3__LoginNoAuthRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__LoginNoAuthRequestParameter
#define soap_read__ns3__LoginNoAuthRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__LoginNoAuthRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__LoginNoAuthRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__LoginRequestParameter
#define SOAP_TYPE__ns3__LoginRequestParameter (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__LoginRequestParameter(struct soap*, struct _ns3__LoginRequestParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__LoginRequestParameter(struct soap*, const struct _ns3__LoginRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__LoginRequestParameter(struct soap*, const char*, int, const struct _ns3__LoginRequestParameter *, const char*);
SOAP_FMAC3 struct _ns3__LoginRequestParameter * SOAP_FMAC4 soap_in__ns3__LoginRequestParameter(struct soap*, const char*, struct _ns3__LoginRequestParameter *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__LoginRequestParameter(struct soap*, const struct _ns3__LoginRequestParameter *, const char*, const char*);

#ifndef soap_write__ns3__LoginRequestParameter
#define soap_write__ns3__LoginRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__LoginRequestParameter(soap, data), 0) || soap_put__ns3__LoginRequestParameter(soap, data, "ns3:LoginRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginRequestParameter * SOAP_FMAC4 soap_get__ns3__LoginRequestParameter(struct soap*, struct _ns3__LoginRequestParameter *, const char*, const char*);

#ifndef soap_read__ns3__LoginRequestParameter
#define soap_read__ns3__LoginRequestParameter(soap, data) ( ((data) ? (soap_default__ns3__LoginRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__LoginRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__session
#define SOAP_TYPE__ns3__session (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns3__session(struct soap*, struct _ns3__session *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__session(struct soap*, const struct _ns3__session *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__session(struct soap*, const char*, int, const struct _ns3__session *, const char*);
SOAP_FMAC3 struct _ns3__session * SOAP_FMAC4 soap_in__ns3__session(struct soap*, const char*, struct _ns3__session *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns3__session(struct soap*, const struct _ns3__session *, const char*, const char*);

#ifndef soap_write__ns3__session
#define soap_write__ns3__session(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns3__session(soap, data), 0) || soap_put__ns3__session(soap, data, "ns3:session", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__session * SOAP_FMAC4 soap_get__ns3__session(struct soap*, struct _ns3__session *, const char*, const char*);

#ifndef soap_read__ns3__session
#define soap_read__ns3__session(soap, data) ( ((data) ? (soap_default__ns3__session(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns3__session(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCOREIdList
#define SOAP_TYPE_ns3__T_USCOREIdList (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCOREIdList(struct soap*, struct ns3__T_USCOREIdList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__T_USCOREIdList(struct soap*, const struct ns3__T_USCOREIdList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCOREIdList(struct soap*, const char*, int, const struct ns3__T_USCOREIdList *, const char*);
SOAP_FMAC3 struct ns3__T_USCOREIdList * SOAP_FMAC4 soap_in_ns3__T_USCOREIdList(struct soap*, const char*, struct ns3__T_USCOREIdList *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCOREIdList(struct soap*, const struct ns3__T_USCOREIdList *, const char*, const char*);

#ifndef soap_write_ns3__T_USCOREIdList
#define soap_write_ns3__T_USCOREIdList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__T_USCOREIdList(soap, data), 0) || soap_put_ns3__T_USCOREIdList(soap, data, "ns3:T_IdList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREIdList * SOAP_FMAC4 soap_get_ns3__T_USCOREIdList(struct soap*, struct ns3__T_USCOREIdList *, const char*, const char*);

#ifndef soap_read_ns3__T_USCOREIdList
#define soap_read_ns3__T_USCOREIdList(soap, data) ( ((data) ? (soap_default_ns3__T_USCOREIdList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCOREIdList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCOREUser
#define SOAP_TYPE_ns3__T_USCOREUser (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCOREUser(struct soap*, struct ns3__T_USCOREUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__T_USCOREUser(struct soap*, const struct ns3__T_USCOREUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCOREUser(struct soap*, const char*, int, const struct ns3__T_USCOREUser *, const char*);
SOAP_FMAC3 struct ns3__T_USCOREUser * SOAP_FMAC4 soap_in_ns3__T_USCOREUser(struct soap*, const char*, struct ns3__T_USCOREUser *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCOREUser(struct soap*, const struct ns3__T_USCOREUser *, const char*, const char*);

#ifndef soap_write_ns3__T_USCOREUser
#define soap_write_ns3__T_USCOREUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__T_USCOREUser(soap, data), 0) || soap_put_ns3__T_USCOREUser(soap, data, "ns3:T_User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREUser * SOAP_FMAC4 soap_get_ns3__T_USCOREUser(struct soap*, struct ns3__T_USCOREUser *, const char*, const char*);

#ifndef soap_read_ns3__T_USCOREUser
#define soap_read_ns3__T_USCOREUser(soap, data) ( ((data) ? (soap_default_ns3__T_USCOREUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCOREUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__UserIDInfo
#define SOAP_TYPE_ns3__UserIDInfo (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__UserIDInfo(struct soap*, struct ns3__UserIDInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__UserIDInfo(struct soap*, const struct ns3__UserIDInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__UserIDInfo(struct soap*, const char*, int, const struct ns3__UserIDInfo *, const char*);
SOAP_FMAC3 struct ns3__UserIDInfo * SOAP_FMAC4 soap_in_ns3__UserIDInfo(struct soap*, const char*, struct ns3__UserIDInfo *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__UserIDInfo(struct soap*, const struct ns3__UserIDInfo *, const char*, const char*);

#ifndef soap_write_ns3__UserIDInfo
#define soap_write_ns3__UserIDInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__UserIDInfo(soap, data), 0) || soap_put_ns3__UserIDInfo(soap, data, "ns3:UserIDInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__UserIDInfo * SOAP_FMAC4 soap_get_ns3__UserIDInfo(struct soap*, struct ns3__UserIDInfo *, const char*, const char*);

#ifndef soap_read_ns3__UserIDInfo
#define soap_read_ns3__UserIDInfo(soap, data) ( ((data) ? (soap_default_ns3__UserIDInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__UserIDInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCOREForeignKeyList
#define SOAP_TYPE_ns3__T_USCOREForeignKeyList (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCOREForeignKeyList(struct soap*, struct ns3__T_USCOREForeignKeyList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__T_USCOREForeignKeyList(struct soap*, const struct ns3__T_USCOREForeignKeyList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCOREForeignKeyList(struct soap*, const char*, int, const struct ns3__T_USCOREForeignKeyList *, const char*);
SOAP_FMAC3 struct ns3__T_USCOREForeignKeyList * SOAP_FMAC4 soap_in_ns3__T_USCOREForeignKeyList(struct soap*, const char*, struct ns3__T_USCOREForeignKeyList *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCOREForeignKeyList(struct soap*, const struct ns3__T_USCOREForeignKeyList *, const char*, const char*);

#ifndef soap_write_ns3__T_USCOREForeignKeyList
#define soap_write_ns3__T_USCOREForeignKeyList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__T_USCOREForeignKeyList(soap, data), 0) || soap_put_ns3__T_USCOREForeignKeyList(soap, data, "ns3:T_ForeignKeyList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREForeignKeyList * SOAP_FMAC4 soap_get_ns3__T_USCOREForeignKeyList(struct soap*, struct ns3__T_USCOREForeignKeyList *, const char*, const char*);

#ifndef soap_read_ns3__T_USCOREForeignKeyList
#define soap_read_ns3__T_USCOREForeignKeyList(soap, data) ( ((data) ? (soap_default_ns3__T_USCOREForeignKeyList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCOREForeignKeyList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns3__T_USCOREForeignKey
#define SOAP_TYPE_ns3__T_USCOREForeignKey (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__T_USCOREForeignKey(struct soap*, struct ns3__T_USCOREForeignKey *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__T_USCOREForeignKey(struct soap*, const struct ns3__T_USCOREForeignKey *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__T_USCOREForeignKey(struct soap*, const char*, int, const struct ns3__T_USCOREForeignKey *, const char*);
SOAP_FMAC3 struct ns3__T_USCOREForeignKey * SOAP_FMAC4 soap_in_ns3__T_USCOREForeignKey(struct soap*, const char*, struct ns3__T_USCOREForeignKey *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__T_USCOREForeignKey(struct soap*, const struct ns3__T_USCOREForeignKey *, const char*, const char*);

#ifndef soap_write_ns3__T_USCOREForeignKey
#define soap_write_ns3__T_USCOREForeignKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__T_USCOREForeignKey(soap, data), 0) || soap_put_ns3__T_USCOREForeignKey(soap, data, "ns3:T_ForeignKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREForeignKey * SOAP_FMAC4 soap_get_ns3__T_USCOREForeignKey(struct soap*, struct ns3__T_USCOREForeignKey *, const char*, const char*);

#ifndef soap_read_ns3__T_USCOREForeignKey
#define soap_read_ns3__T_USCOREForeignKey(soap, data) ( ((data) ? (soap_default_ns3__T_USCOREForeignKey(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__T_USCOREForeignKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ns2__GeneralWebserviceException
#define SOAP_TYPE_ns2__GeneralWebserviceException (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__GeneralWebserviceException(struct soap*, struct ns2__GeneralWebserviceException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__GeneralWebserviceException(struct soap*, const struct ns2__GeneralWebserviceException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GeneralWebserviceException(struct soap*, const char*, int, const struct ns2__GeneralWebserviceException *, const char*);
SOAP_FMAC3 struct ns2__GeneralWebserviceException * SOAP_FMAC4 soap_in_ns2__GeneralWebserviceException(struct soap*, const char*, struct ns2__GeneralWebserviceException *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__GeneralWebserviceException(struct soap*, const struct ns2__GeneralWebserviceException *, const char*, const char*);

#ifndef soap_write_ns2__GeneralWebserviceException
#define soap_write_ns2__GeneralWebserviceException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns2__GeneralWebserviceException(soap, data), 0) || soap_put_ns2__GeneralWebserviceException(soap, data, "ns2:GeneralWebserviceException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns2__GeneralWebserviceException * SOAP_FMAC4 soap_get_ns2__GeneralWebserviceException(struct soap*, struct ns2__GeneralWebserviceException *, const char*, const char*);

#ifndef soap_read_ns2__GeneralWebserviceException
#define soap_read_ns2__GeneralWebserviceException(soap, data) ( ((data) ? (soap_default_ns2__GeneralWebserviceException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns2__GeneralWebserviceException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__ns3__union_LoginImpersonateRequestParameter
#define SOAP_TYPE__ns3__union_LoginImpersonateRequestParameter (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__union_LoginImpersonateRequestParameter(struct soap*, int, const union _ns3__union_LoginImpersonateRequestParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__union_LoginImpersonateRequestParameter(struct soap*, int, const union _ns3__union_LoginImpersonateRequestParameter *);
SOAP_FMAC3 union _ns3__union_LoginImpersonateRequestParameter * SOAP_FMAC4 soap_in__ns3__union_LoginImpersonateRequestParameter(struct soap*, int*, union _ns3__union_LoginImpersonateRequestParameter *);

#ifndef SOAP_TYPE__ns3__union_UserIDInfo
#define SOAP_TYPE__ns3__union_UserIDInfo (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns3__union_UserIDInfo(struct soap*, int, const union _ns3__union_UserIDInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__union_UserIDInfo(struct soap*, int, const union _ns3__union_UserIDInfo *);
SOAP_FMAC3 union _ns3__union_UserIDInfo * SOAP_FMAC4 soap_in__ns3__union_UserIDInfo(struct soap*, int*, union _ns3__union_UserIDInfo *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns3__UserList
#define SOAP_TYPE_PointerTo_ns3__UserList (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__UserList(struct soap*, struct _ns3__UserList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__UserList(struct soap*, const char *, int, struct _ns3__UserList *const*, const char *);
SOAP_FMAC3 struct _ns3__UserList ** SOAP_FMAC4 soap_in_PointerTo_ns3__UserList(struct soap*, const char*, struct _ns3__UserList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__UserList(struct soap*, struct _ns3__UserList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__UserList
#define soap_write_PointerTo_ns3__UserList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__UserList(soap, data), 0) || soap_put_PointerTo_ns3__UserList(soap, data, "ns3:UserList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__UserList ** SOAP_FMAC4 soap_get_PointerTo_ns3__UserList(struct soap*, struct _ns3__UserList **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__UserList
#define soap_read_PointerTo_ns3__UserList(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__UserList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__UserList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__searchUserRequestParameter
#define SOAP_TYPE_PointerTo_ns3__searchUserRequestParameter (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__searchUserRequestParameter(struct soap*, struct _ns3__searchUserRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__searchUserRequestParameter(struct soap*, const char *, int, struct _ns3__searchUserRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__searchUserRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__searchUserRequestParameter(struct soap*, const char*, struct _ns3__searchUserRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__searchUserRequestParameter(struct soap*, struct _ns3__searchUserRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__searchUserRequestParameter
#define soap_write_PointerTo_ns3__searchUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__searchUserRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__searchUserRequestParameter(soap, data, "ns3:searchUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__searchUserRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__searchUserRequestParameter(struct soap*, struct _ns3__searchUserRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__searchUserRequestParameter
#define soap_read_PointerTo_ns3__searchUserRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__searchUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__searchUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__ns1__deleteUserResponse
#define SOAP_TYPE_PointerTo__ns1__deleteUserResponse (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__deleteUserResponse(struct soap*, struct __ns1__deleteUserResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__deleteUserResponse(struct soap*, const char *, int, struct __ns1__deleteUserResponse *const*, const char *);
SOAP_FMAC3 struct __ns1__deleteUserResponse ** SOAP_FMAC4 soap_in_PointerTo__ns1__deleteUserResponse(struct soap*, const char*, struct __ns1__deleteUserResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__deleteUserResponse(struct soap*, struct __ns1__deleteUserResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo__ns1__deleteUserResponse
#define soap_write_PointerTo__ns1__deleteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__ns1__deleteUserResponse(soap, data), 0) || soap_put_PointerTo__ns1__deleteUserResponse(soap, data, "-ns1:deleteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__deleteUserResponse ** SOAP_FMAC4 soap_get_PointerTo__ns1__deleteUserResponse(struct soap*, struct __ns1__deleteUserResponse **, const char*, const char*);

#ifndef soap_read_PointerTo__ns1__deleteUserResponse
#define soap_read_PointerTo__ns1__deleteUserResponse(soap, data) ( ((data) ? (soap_default_PointerTo__ns1__deleteUserResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo__ns1__deleteUserResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__deleteUserRequestParameter
#define SOAP_TYPE_PointerTo_ns3__deleteUserRequestParameter (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__deleteUserRequestParameter(struct soap*, struct _ns3__deleteUserRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__deleteUserRequestParameter(struct soap*, const char *, int, struct _ns3__deleteUserRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__deleteUserRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__deleteUserRequestParameter(struct soap*, const char*, struct _ns3__deleteUserRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__deleteUserRequestParameter(struct soap*, struct _ns3__deleteUserRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__deleteUserRequestParameter
#define soap_write_PointerTo_ns3__deleteUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__deleteUserRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__deleteUserRequestParameter(soap, data, "ns3:deleteUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__deleteUserRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__deleteUserRequestParameter(struct soap*, struct _ns3__deleteUserRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__deleteUserRequestParameter
#define soap_read_PointerTo_ns3__deleteUserRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__deleteUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__deleteUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__createUserRequestParameter
#define SOAP_TYPE_PointerTo_ns3__createUserRequestParameter (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__createUserRequestParameter(struct soap*, struct _ns3__createUserRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__createUserRequestParameter(struct soap*, const char *, int, struct _ns3__createUserRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__createUserRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__createUserRequestParameter(struct soap*, const char*, struct _ns3__createUserRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__createUserRequestParameter(struct soap*, struct _ns3__createUserRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__createUserRequestParameter
#define soap_write_PointerTo_ns3__createUserRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__createUserRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__createUserRequestParameter(soap, data, "ns3:createUserRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__createUserRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__createUserRequestParameter(struct soap*, struct _ns3__createUserRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__createUserRequestParameter
#define soap_read_PointerTo_ns3__createUserRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__createUserRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__createUserRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__ns1__LogoutResponse
#define SOAP_TYPE_PointerTo__ns1__LogoutResponse (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__LogoutResponse(struct soap*, struct __ns1__LogoutResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__LogoutResponse(struct soap*, const char *, int, struct __ns1__LogoutResponse *const*, const char *);
SOAP_FMAC3 struct __ns1__LogoutResponse ** SOAP_FMAC4 soap_in_PointerTo__ns1__LogoutResponse(struct soap*, const char*, struct __ns1__LogoutResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__LogoutResponse(struct soap*, struct __ns1__LogoutResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo__ns1__LogoutResponse
#define soap_write_PointerTo__ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__ns1__LogoutResponse(soap, data), 0) || soap_put_PointerTo__ns1__LogoutResponse(soap, data, "-ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LogoutResponse ** SOAP_FMAC4 soap_get_PointerTo__ns1__LogoutResponse(struct soap*, struct __ns1__LogoutResponse **, const char*, const char*);

#ifndef soap_read_PointerTo__ns1__LogoutResponse
#define soap_read_PointerTo__ns1__LogoutResponse(soap, data) ( ((data) ? (soap_default_PointerTo__ns1__LogoutResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo__ns1__LogoutResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__LogoutRequestParameter
#define SOAP_TYPE_PointerTo_ns3__LogoutRequestParameter (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__LogoutRequestParameter(struct soap*, struct _ns3__LogoutRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__LogoutRequestParameter(struct soap*, const char *, int, struct _ns3__LogoutRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__LogoutRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__LogoutRequestParameter(struct soap*, const char*, struct _ns3__LogoutRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__LogoutRequestParameter(struct soap*, struct _ns3__LogoutRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__LogoutRequestParameter
#define soap_write_PointerTo_ns3__LogoutRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__LogoutRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__LogoutRequestParameter(soap, data, "ns3:LogoutRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LogoutRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__LogoutRequestParameter(struct soap*, struct _ns3__LogoutRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__LogoutRequestParameter
#define soap_read_PointerTo_ns3__LogoutRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__LogoutRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__LogoutRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__LoginImpersonateRequestParameter
#define SOAP_TYPE_PointerTo_ns3__LoginImpersonateRequestParameter (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__LoginImpersonateRequestParameter(struct soap*, struct _ns3__LoginImpersonateRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__LoginImpersonateRequestParameter(struct soap*, const char *, int, struct _ns3__LoginImpersonateRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__LoginImpersonateRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__LoginImpersonateRequestParameter(struct soap*, const char*, struct _ns3__LoginImpersonateRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__LoginImpersonateRequestParameter(struct soap*, struct _ns3__LoginImpersonateRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__LoginImpersonateRequestParameter
#define soap_write_PointerTo_ns3__LoginImpersonateRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__LoginImpersonateRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__LoginImpersonateRequestParameter(soap, data, "ns3:LoginImpersonateRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginImpersonateRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__LoginImpersonateRequestParameter(struct soap*, struct _ns3__LoginImpersonateRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__LoginImpersonateRequestParameter
#define soap_read_PointerTo_ns3__LoginImpersonateRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__LoginImpersonateRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__LoginImpersonateRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__LoginSAMLRequestParameter
#define SOAP_TYPE_PointerTo_ns3__LoginSAMLRequestParameter (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__LoginSAMLRequestParameter(struct soap*, struct _ns3__LoginSAMLRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__LoginSAMLRequestParameter(struct soap*, const char *, int, struct _ns3__LoginSAMLRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__LoginSAMLRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__LoginSAMLRequestParameter(struct soap*, const char*, struct _ns3__LoginSAMLRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__LoginSAMLRequestParameter(struct soap*, struct _ns3__LoginSAMLRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__LoginSAMLRequestParameter
#define soap_write_PointerTo_ns3__LoginSAMLRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__LoginSAMLRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__LoginSAMLRequestParameter(soap, data, "ns3:LoginSAMLRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginSAMLRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__LoginSAMLRequestParameter(struct soap*, struct _ns3__LoginSAMLRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__LoginSAMLRequestParameter
#define soap_read_PointerTo_ns3__LoginSAMLRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__LoginSAMLRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__LoginSAMLRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__LoginNoAuthRequestParameter
#define SOAP_TYPE_PointerTo_ns3__LoginNoAuthRequestParameter (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__LoginNoAuthRequestParameter(struct soap*, struct _ns3__LoginNoAuthRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__LoginNoAuthRequestParameter(struct soap*, const char *, int, struct _ns3__LoginNoAuthRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__LoginNoAuthRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__LoginNoAuthRequestParameter(struct soap*, const char*, struct _ns3__LoginNoAuthRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__LoginNoAuthRequestParameter(struct soap*, struct _ns3__LoginNoAuthRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__LoginNoAuthRequestParameter
#define soap_write_PointerTo_ns3__LoginNoAuthRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__LoginNoAuthRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__LoginNoAuthRequestParameter(soap, data, "ns3:LoginNoAuthRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginNoAuthRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__LoginNoAuthRequestParameter(struct soap*, struct _ns3__LoginNoAuthRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__LoginNoAuthRequestParameter
#define soap_read_PointerTo_ns3__LoginNoAuthRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__LoginNoAuthRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__LoginNoAuthRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__session
#define SOAP_TYPE_PointerTo_ns3__session (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__session(struct soap*, struct _ns3__session *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__session(struct soap*, const char *, int, struct _ns3__session *const*, const char *);
SOAP_FMAC3 struct _ns3__session ** SOAP_FMAC4 soap_in_PointerTo_ns3__session(struct soap*, const char*, struct _ns3__session **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__session(struct soap*, struct _ns3__session *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__session
#define soap_write_PointerTo_ns3__session(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__session(soap, data), 0) || soap_put_PointerTo_ns3__session(soap, data, "ns3:session", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__session ** SOAP_FMAC4 soap_get_PointerTo_ns3__session(struct soap*, struct _ns3__session **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__session
#define soap_read_PointerTo_ns3__session(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__session(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__session(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns3__LoginRequestParameter
#define SOAP_TYPE_PointerTo_ns3__LoginRequestParameter (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns3__LoginRequestParameter(struct soap*, struct _ns3__LoginRequestParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns3__LoginRequestParameter(struct soap*, const char *, int, struct _ns3__LoginRequestParameter *const*, const char *);
SOAP_FMAC3 struct _ns3__LoginRequestParameter ** SOAP_FMAC4 soap_in_PointerTo_ns3__LoginRequestParameter(struct soap*, const char*, struct _ns3__LoginRequestParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns3__LoginRequestParameter(struct soap*, struct _ns3__LoginRequestParameter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns3__LoginRequestParameter
#define soap_write_PointerTo_ns3__LoginRequestParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns3__LoginRequestParameter(soap, data), 0) || soap_put_PointerTo_ns3__LoginRequestParameter(soap, data, "ns3:LoginRequestParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns3__LoginRequestParameter ** SOAP_FMAC4 soap_get_PointerTo_ns3__LoginRequestParameter(struct soap*, struct _ns3__LoginRequestParameter **, const char*, const char*);

#ifndef soap_read_PointerTo_ns3__LoginRequestParameter
#define soap_read_PointerTo_ns3__LoginRequestParameter(soap, data) ( ((data) ? (soap_default_PointerTo_ns3__LoginRequestParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns3__LoginRequestParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__ServerMaintenanceException
#define SOAP_TYPE_PointerTo_ns2__ServerMaintenanceException (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__ServerMaintenanceException(struct soap*, struct _ns2__ServerMaintenanceException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__ServerMaintenanceException(struct soap*, const char *, int, struct _ns2__ServerMaintenanceException *const*, const char *);
SOAP_FMAC3 struct _ns2__ServerMaintenanceException ** SOAP_FMAC4 soap_in_PointerTo_ns2__ServerMaintenanceException(struct soap*, const char*, struct _ns2__ServerMaintenanceException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__ServerMaintenanceException(struct soap*, struct _ns2__ServerMaintenanceException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__ServerMaintenanceException
#define soap_write_PointerTo_ns2__ServerMaintenanceException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__ServerMaintenanceException(soap, data), 0) || soap_put_PointerTo_ns2__ServerMaintenanceException(soap, data, "ns2:ServerMaintenanceException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__ServerMaintenanceException ** SOAP_FMAC4 soap_get_PointerTo_ns2__ServerMaintenanceException(struct soap*, struct _ns2__ServerMaintenanceException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__ServerMaintenanceException
#define soap_read_PointerTo_ns2__ServerMaintenanceException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__ServerMaintenanceException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__ServerMaintenanceException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__PermissionDeniedException
#define SOAP_TYPE_PointerTo_ns2__PermissionDeniedException (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__PermissionDeniedException(struct soap*, struct _ns2__PermissionDeniedException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__PermissionDeniedException(struct soap*, const char *, int, struct _ns2__PermissionDeniedException *const*, const char *);
SOAP_FMAC3 struct _ns2__PermissionDeniedException ** SOAP_FMAC4 soap_in_PointerTo_ns2__PermissionDeniedException(struct soap*, const char*, struct _ns2__PermissionDeniedException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__PermissionDeniedException(struct soap*, struct _ns2__PermissionDeniedException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__PermissionDeniedException
#define soap_write_PointerTo_ns2__PermissionDeniedException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__PermissionDeniedException(soap, data), 0) || soap_put_PointerTo_ns2__PermissionDeniedException(soap, data, "ns2:PermissionDeniedException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__PermissionDeniedException ** SOAP_FMAC4 soap_get_PointerTo_ns2__PermissionDeniedException(struct soap*, struct _ns2__PermissionDeniedException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__PermissionDeniedException
#define soap_read_PointerTo_ns2__PermissionDeniedException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__PermissionDeniedException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__PermissionDeniedException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidUsernamePasswordCombinationException
#define SOAP_TYPE_PointerTo_ns2__InvalidUsernamePasswordCombinationException (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidUsernamePasswordCombinationException(struct soap*, struct _ns2__InvalidUsernamePasswordCombinationException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidUsernamePasswordCombinationException(struct soap*, const char *, int, struct _ns2__InvalidUsernamePasswordCombinationException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidUsernamePasswordCombinationException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidUsernamePasswordCombinationException(struct soap*, const char*, struct _ns2__InvalidUsernamePasswordCombinationException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidUsernamePasswordCombinationException(struct soap*, struct _ns2__InvalidUsernamePasswordCombinationException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidUsernamePasswordCombinationException
#define soap_write_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, data, "ns2:InvalidUsernamePasswordCombinationException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidUsernamePasswordCombinationException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidUsernamePasswordCombinationException(struct soap*, struct _ns2__InvalidUsernamePasswordCombinationException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidUsernamePasswordCombinationException
#define soap_read_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidUsernamePasswordCombinationException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidUsernameException
#define SOAP_TYPE_PointerTo_ns2__InvalidUsernameException (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidUsernameException(struct soap*, struct _ns2__InvalidUsernameException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidUsernameException(struct soap*, const char *, int, struct _ns2__InvalidUsernameException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidUsernameException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidUsernameException(struct soap*, const char*, struct _ns2__InvalidUsernameException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidUsernameException(struct soap*, struct _ns2__InvalidUsernameException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidUsernameException
#define soap_write_PointerTo_ns2__InvalidUsernameException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidUsernameException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidUsernameException(soap, data, "ns2:InvalidUsernameException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidUsernameException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidUsernameException(struct soap*, struct _ns2__InvalidUsernameException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidUsernameException
#define soap_read_PointerTo_ns2__InvalidUsernameException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidUsernameException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidUsernameException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidSessionException
#define SOAP_TYPE_PointerTo_ns2__InvalidSessionException (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidSessionException(struct soap*, struct _ns2__InvalidSessionException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidSessionException(struct soap*, const char *, int, struct _ns2__InvalidSessionException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidSessionException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidSessionException(struct soap*, const char*, struct _ns2__InvalidSessionException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidSessionException(struct soap*, struct _ns2__InvalidSessionException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidSessionException
#define soap_write_PointerTo_ns2__InvalidSessionException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidSessionException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidSessionException(soap, data, "ns2:InvalidSessionException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidSessionException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidSessionException(struct soap*, struct _ns2__InvalidSessionException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidSessionException
#define soap_read_PointerTo_ns2__InvalidSessionException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidSessionException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidSessionException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidParameterException
#define SOAP_TYPE_PointerTo_ns2__InvalidParameterException (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidParameterException(struct soap*, struct _ns2__InvalidParameterException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidParameterException(struct soap*, const char *, int, struct _ns2__InvalidParameterException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidParameterException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidParameterException(struct soap*, const char*, struct _ns2__InvalidParameterException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidParameterException(struct soap*, struct _ns2__InvalidParameterException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidParameterException
#define soap_write_PointerTo_ns2__InvalidParameterException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidParameterException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidParameterException(soap, data, "ns2:InvalidParameterException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidParameterException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidParameterException(struct soap*, struct _ns2__InvalidParameterException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidParameterException
#define soap_read_PointerTo_ns2__InvalidParameterException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidParameterException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidParameterException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidNrOfImpersonationsException
#define SOAP_TYPE_PointerTo_ns2__InvalidNrOfImpersonationsException (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidNrOfImpersonationsException(struct soap*, struct _ns2__InvalidNrOfImpersonationsException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidNrOfImpersonationsException(struct soap*, const char *, int, struct _ns2__InvalidNrOfImpersonationsException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidNrOfImpersonationsException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidNrOfImpersonationsException(struct soap*, const char*, struct _ns2__InvalidNrOfImpersonationsException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidNrOfImpersonationsException(struct soap*, struct _ns2__InvalidNrOfImpersonationsException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidNrOfImpersonationsException
#define soap_write_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, data, "ns2:InvalidNrOfImpersonationsException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidNrOfImpersonationsException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidNrOfImpersonationsException(struct soap*, struct _ns2__InvalidNrOfImpersonationsException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidNrOfImpersonationsException
#define soap_read_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidNrOfImpersonationsException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidNamedLicenseException
#define SOAP_TYPE_PointerTo_ns2__InvalidNamedLicenseException (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidNamedLicenseException(struct soap*, struct _ns2__InvalidNamedLicenseException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidNamedLicenseException(struct soap*, const char *, int, struct _ns2__InvalidNamedLicenseException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidNamedLicenseException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidNamedLicenseException(struct soap*, const char*, struct _ns2__InvalidNamedLicenseException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidNamedLicenseException(struct soap*, struct _ns2__InvalidNamedLicenseException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidNamedLicenseException
#define soap_write_PointerTo_ns2__InvalidNamedLicenseException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidNamedLicenseException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidNamedLicenseException(soap, data, "ns2:InvalidNamedLicenseException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidNamedLicenseException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidNamedLicenseException(struct soap*, struct _ns2__InvalidNamedLicenseException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidNamedLicenseException
#define soap_read_PointerTo_ns2__InvalidNamedLicenseException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidNamedLicenseException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidNamedLicenseException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidDatesException
#define SOAP_TYPE_PointerTo_ns2__InvalidDatesException (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidDatesException(struct soap*, struct _ns2__InvalidDatesException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidDatesException(struct soap*, const char *, int, struct _ns2__InvalidDatesException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidDatesException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidDatesException(struct soap*, const char*, struct _ns2__InvalidDatesException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidDatesException(struct soap*, struct _ns2__InvalidDatesException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidDatesException
#define soap_write_PointerTo_ns2__InvalidDatesException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidDatesException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidDatesException(soap, data, "ns2:InvalidDatesException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidDatesException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidDatesException(struct soap*, struct _ns2__InvalidDatesException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidDatesException
#define soap_read_PointerTo_ns2__InvalidDatesException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidDatesException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidDatesException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidConcurrentLicenseException
#define SOAP_TYPE_PointerTo_ns2__InvalidConcurrentLicenseException (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidConcurrentLicenseException(struct soap*, struct _ns2__InvalidConcurrentLicenseException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidConcurrentLicenseException(struct soap*, const char *, int, struct _ns2__InvalidConcurrentLicenseException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidConcurrentLicenseException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidConcurrentLicenseException(struct soap*, const char*, struct _ns2__InvalidConcurrentLicenseException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidConcurrentLicenseException(struct soap*, struct _ns2__InvalidConcurrentLicenseException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidConcurrentLicenseException
#define soap_write_PointerTo_ns2__InvalidConcurrentLicenseException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidConcurrentLicenseException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidConcurrentLicenseException(soap, data, "ns2:InvalidConcurrentLicenseException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidConcurrentLicenseException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidConcurrentLicenseException(struct soap*, struct _ns2__InvalidConcurrentLicenseException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidConcurrentLicenseException
#define soap_read_PointerTo_ns2__InvalidConcurrentLicenseException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidConcurrentLicenseException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidConcurrentLicenseException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__InvalidClientException
#define SOAP_TYPE_PointerTo_ns2__InvalidClientException (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__InvalidClientException(struct soap*, struct _ns2__InvalidClientException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__InvalidClientException(struct soap*, const char *, int, struct _ns2__InvalidClientException *const*, const char *);
SOAP_FMAC3 struct _ns2__InvalidClientException ** SOAP_FMAC4 soap_in_PointerTo_ns2__InvalidClientException(struct soap*, const char*, struct _ns2__InvalidClientException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__InvalidClientException(struct soap*, struct _ns2__InvalidClientException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__InvalidClientException
#define soap_write_PointerTo_ns2__InvalidClientException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__InvalidClientException(soap, data), 0) || soap_put_PointerTo_ns2__InvalidClientException(soap, data, "ns2:InvalidClientException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__InvalidClientException ** SOAP_FMAC4 soap_get_PointerTo_ns2__InvalidClientException(struct soap*, struct _ns2__InvalidClientException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__InvalidClientException
#define soap_read_PointerTo_ns2__InvalidClientException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__InvalidClientException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__InvalidClientException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__ImpersonatedUserNotFoundException
#define SOAP_TYPE_PointerTo_ns2__ImpersonatedUserNotFoundException (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__ImpersonatedUserNotFoundException(struct soap*, struct _ns2__ImpersonatedUserNotFoundException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__ImpersonatedUserNotFoundException(struct soap*, const char *, int, struct _ns2__ImpersonatedUserNotFoundException *const*, const char *);
SOAP_FMAC3 struct _ns2__ImpersonatedUserNotFoundException ** SOAP_FMAC4 soap_in_PointerTo_ns2__ImpersonatedUserNotFoundException(struct soap*, const char*, struct _ns2__ImpersonatedUserNotFoundException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__ImpersonatedUserNotFoundException(struct soap*, struct _ns2__ImpersonatedUserNotFoundException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__ImpersonatedUserNotFoundException
#define soap_write_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, data), 0) || soap_put_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, data, "ns2:ImpersonatedUserNotFoundException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__ImpersonatedUserNotFoundException ** SOAP_FMAC4 soap_get_PointerTo_ns2__ImpersonatedUserNotFoundException(struct soap*, struct _ns2__ImpersonatedUserNotFoundException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__ImpersonatedUserNotFoundException
#define soap_read_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__ImpersonatedUserNotFoundException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GeneralWebserviceException
#define SOAP_TYPE_PointerTo_ns2__GeneralWebserviceException (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GeneralWebserviceException(struct soap*, struct _ns2__GeneralWebserviceException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GeneralWebserviceException(struct soap*, const char *, int, struct _ns2__GeneralWebserviceException *const*, const char *);
SOAP_FMAC3 struct _ns2__GeneralWebserviceException ** SOAP_FMAC4 soap_in_PointerTo_ns2__GeneralWebserviceException(struct soap*, const char*, struct _ns2__GeneralWebserviceException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GeneralWebserviceException(struct soap*, struct _ns2__GeneralWebserviceException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GeneralWebserviceException
#define soap_write_PointerTo_ns2__GeneralWebserviceException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GeneralWebserviceException(soap, data), 0) || soap_put_PointerTo_ns2__GeneralWebserviceException(soap, data, "ns2:GeneralWebserviceException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__GeneralWebserviceException ** SOAP_FMAC4 soap_get_PointerTo_ns2__GeneralWebserviceException(struct soap*, struct _ns2__GeneralWebserviceException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GeneralWebserviceException
#define soap_read_PointerTo_ns2__GeneralWebserviceException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__GeneralWebserviceException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GeneralWebserviceException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__AssertionException
#define SOAP_TYPE_PointerTo_ns2__AssertionException (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__AssertionException(struct soap*, struct _ns2__AssertionException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__AssertionException(struct soap*, const char *, int, struct _ns2__AssertionException *const*, const char *);
SOAP_FMAC3 struct _ns2__AssertionException ** SOAP_FMAC4 soap_in_PointerTo_ns2__AssertionException(struct soap*, const char*, struct _ns2__AssertionException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__AssertionException(struct soap*, struct _ns2__AssertionException *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__AssertionException
#define soap_write_PointerTo_ns2__AssertionException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__AssertionException(soap, data), 0) || soap_put_PointerTo_ns2__AssertionException(soap, data, "ns2:AssertionException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns2__AssertionException ** SOAP_FMAC4 soap_get_PointerTo_ns2__AssertionException(struct soap*, struct _ns2__AssertionException **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__AssertionException
#define soap_read_PointerTo_ns2__AssertionException(soap, data) ( ((data) ? (soap_default_PointerTo_ns2__AssertionException(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_ns2__AssertionException(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCOREUser
#define SOAP_TYPE_PointerTons3__T_USCOREUser (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCOREUser(struct soap*, struct ns3__T_USCOREUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCOREUser(struct soap*, const char *, int, struct ns3__T_USCOREUser *const*, const char *);
SOAP_FMAC3 struct ns3__T_USCOREUser ** SOAP_FMAC4 soap_in_PointerTons3__T_USCOREUser(struct soap*, const char*, struct ns3__T_USCOREUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCOREUser(struct soap*, struct ns3__T_USCOREUser *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCOREUser
#define soap_write_PointerTons3__T_USCOREUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCOREUser(soap, data), 0) || soap_put_PointerTons3__T_USCOREUser(soap, data, "ns3:T_User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREUser ** SOAP_FMAC4 soap_get_PointerTons3__T_USCOREUser(struct soap*, struct ns3__T_USCOREUser **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCOREUser
#define soap_read_PointerTons3__T_USCOREUser(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCOREUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCOREUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__UserIDInfo
#define SOAP_TYPE_PointerTons3__UserIDInfo (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__UserIDInfo(struct soap*, struct ns3__UserIDInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__UserIDInfo(struct soap*, const char *, int, struct ns3__UserIDInfo *const*, const char *);
SOAP_FMAC3 struct ns3__UserIDInfo ** SOAP_FMAC4 soap_in_PointerTons3__UserIDInfo(struct soap*, const char*, struct ns3__UserIDInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__UserIDInfo(struct soap*, struct ns3__UserIDInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__UserIDInfo
#define soap_write_PointerTons3__UserIDInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__UserIDInfo(soap, data), 0) || soap_put_PointerTons3__UserIDInfo(soap, data, "ns3:UserIDInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__UserIDInfo ** SOAP_FMAC4 soap_get_PointerTons3__UserIDInfo(struct soap*, struct ns3__UserIDInfo **, const char*, const char*);

#ifndef soap_read_PointerTons3__UserIDInfo
#define soap_read_PointerTons3__UserIDInfo(soap, data) ( ((data) ? (soap_default_PointerTons3__UserIDInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__UserIDInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCOREUserState
#define SOAP_TYPE_PointerTons3__T_USCOREUserState (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCOREUserState(struct soap*, enum ns3__T_USCOREUserState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCOREUserState(struct soap*, const char *, int, enum ns3__T_USCOREUserState *const*, const char *);
SOAP_FMAC3 enum ns3__T_USCOREUserState ** SOAP_FMAC4 soap_in_PointerTons3__T_USCOREUserState(struct soap*, const char*, enum ns3__T_USCOREUserState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCOREUserState(struct soap*, enum ns3__T_USCOREUserState *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCOREUserState
#define soap_write_PointerTons3__T_USCOREUserState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCOREUserState(soap, data), 0) || soap_put_PointerTons3__T_USCOREUserState(soap, data, "ns3:T_UserState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns3__T_USCOREUserState ** SOAP_FMAC4 soap_get_PointerTons3__T_USCOREUserState(struct soap*, enum ns3__T_USCOREUserState **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCOREUserState
#define soap_read_PointerTons3__T_USCOREUserState(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCOREUserState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCOREUserState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCORELicenseType
#define SOAP_TYPE_PointerTons3__T_USCORELicenseType (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCORELicenseType(struct soap*, enum ns3__T_USCORELicenseType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCORELicenseType(struct soap*, const char *, int, enum ns3__T_USCORELicenseType *const*, const char *);
SOAP_FMAC3 enum ns3__T_USCORELicenseType ** SOAP_FMAC4 soap_in_PointerTons3__T_USCORELicenseType(struct soap*, const char*, enum ns3__T_USCORELicenseType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCORELicenseType(struct soap*, enum ns3__T_USCORELicenseType *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCORELicenseType
#define soap_write_PointerTons3__T_USCORELicenseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCORELicenseType(soap, data), 0) || soap_put_PointerTons3__T_USCORELicenseType(soap, data, "ns3:T_LicenseType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns3__T_USCORELicenseType ** SOAP_FMAC4 soap_get_PointerTons3__T_USCORELicenseType(struct soap*, enum ns3__T_USCORELicenseType **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCORELicenseType
#define soap_read_PointerTons3__T_USCORELicenseType(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCORELicenseType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCORELicenseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__id
#define SOAP_TYPE_PointerTons3__id (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__id(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__id(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerTons3__id(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__id(struct soap*, LONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__id
#define soap_write_PointerTons3__id(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__id(soap, data), 0) || soap_put_PointerTons3__id(soap, data, "ns3:id", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerTons3__id(struct soap*, LONG64 **, const char*, const char*);

#ifndef soap_read_PointerTons3__id
#define soap_read_PointerTons3__id(soap, data) ( ((data) ? (soap_default_PointerTons3__id(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__id(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCOREForeignKeyList
#define SOAP_TYPE_PointerTons3__T_USCOREForeignKeyList (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCOREForeignKeyList(struct soap*, struct ns3__T_USCOREForeignKeyList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCOREForeignKeyList(struct soap*, const char *, int, struct ns3__T_USCOREForeignKeyList *const*, const char *);
SOAP_FMAC3 struct ns3__T_USCOREForeignKeyList ** SOAP_FMAC4 soap_in_PointerTons3__T_USCOREForeignKeyList(struct soap*, const char*, struct ns3__T_USCOREForeignKeyList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCOREForeignKeyList(struct soap*, struct ns3__T_USCOREForeignKeyList *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCOREForeignKeyList
#define soap_write_PointerTons3__T_USCOREForeignKeyList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCOREForeignKeyList(soap, data), 0) || soap_put_PointerTons3__T_USCOREForeignKeyList(soap, data, "ns3:T_ForeignKeyList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREForeignKeyList ** SOAP_FMAC4 soap_get_PointerTons3__T_USCOREForeignKeyList(struct soap*, struct ns3__T_USCOREForeignKeyList **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCOREForeignKeyList
#define soap_read_PointerTons3__T_USCOREForeignKeyList(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCOREForeignKeyList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCOREForeignKeyList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCOREIdList
#define SOAP_TYPE_PointerTons3__T_USCOREIdList (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCOREIdList(struct soap*, struct ns3__T_USCOREIdList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCOREIdList(struct soap*, const char *, int, struct ns3__T_USCOREIdList *const*, const char *);
SOAP_FMAC3 struct ns3__T_USCOREIdList ** SOAP_FMAC4 soap_in_PointerTons3__T_USCOREIdList(struct soap*, const char*, struct ns3__T_USCOREIdList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCOREIdList(struct soap*, struct ns3__T_USCOREIdList *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCOREIdList
#define soap_write_PointerTons3__T_USCOREIdList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCOREIdList(soap, data), 0) || soap_put_PointerTons3__T_USCOREIdList(soap, data, "ns3:T_IdList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREIdList ** SOAP_FMAC4 soap_get_PointerTons3__T_USCOREIdList(struct soap*, struct ns3__T_USCOREIdList **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCOREIdList
#define soap_read_PointerTons3__T_USCOREIdList(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCOREIdList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCOREIdList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__T_USCOREForeignKey
#define SOAP_TYPE_PointerTons3__T_USCOREForeignKey (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__T_USCOREForeignKey(struct soap*, struct ns3__T_USCOREForeignKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__T_USCOREForeignKey(struct soap*, const char *, int, struct ns3__T_USCOREForeignKey *const*, const char *);
SOAP_FMAC3 struct ns3__T_USCOREForeignKey ** SOAP_FMAC4 soap_in_PointerTons3__T_USCOREForeignKey(struct soap*, const char*, struct ns3__T_USCOREForeignKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__T_USCOREForeignKey(struct soap*, struct ns3__T_USCOREForeignKey *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__T_USCOREForeignKey
#define soap_write_PointerTons3__T_USCOREForeignKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__T_USCOREForeignKey(soap, data), 0) || soap_put_PointerTons3__T_USCOREForeignKey(soap, data, "ns3:T_ForeignKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__T_USCOREForeignKey ** SOAP_FMAC4 soap_get_PointerTons3__T_USCOREForeignKey(struct soap*, struct ns3__T_USCOREForeignKey **, const char*, const char*);

#ifndef soap_read_PointerTons3__T_USCOREForeignKey
#define soap_read_PointerTons3__T_USCOREForeignKey(soap, data) ( ((data) ? (soap_default_PointerTons3__T_USCOREForeignKey(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTons3__T_USCOREForeignKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (8)
#endif

#define soap_default_xsd__date(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, char *const*);

#define soap_xsd__date2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__date soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__date(soap, data), 0) || soap_put_xsd__date(soap, data, "xsd:date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__date(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( ((data) ? (soap_default_xsd__date(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__date(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( ((data) ? (soap_default__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( ((data) ? (soap_default_string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
